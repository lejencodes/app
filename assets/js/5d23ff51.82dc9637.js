"use strict";(self.webpackChunkapp_src=self.webpackChunkapp_src||[]).push([[1180],{3905:(e,n,t)=>{t.d(n,{Zo:()=>s,kt:()=>u});var r=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function a(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var l=r.createContext({}),p=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},s=function(e){var n=p(e.components);return r.createElement(l.Provider,{value:n},e.children)},O={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,o=e.originalType,l=e.parentName,s=a(e,["components","mdxType","originalType","parentName"]),d=p(t),u=i,f=d["".concat(l,".").concat(u)]||d[u]||O[u]||o;return t?r.createElement(f,c(c({ref:n},s),{},{components:t})):r.createElement(f,c({ref:n},s))}));function u(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=t.length,c=new Array(o);c[0]=d;var a={};for(var l in n)hasOwnProperty.call(n,l)&&(a[l]=n[l]);a.originalType=e,a.mdxType="string"==typeof e?e:i,c[1]=a;for(var p=2;p<o;p++)c[p]=t[p];return r.createElement.apply(null,c)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},6944:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>O,frontMatter:()=>o,metadata:()=>a,toc:()=>p});var r=t(7462),i=(t(7294),t(3905));const o={},c=void 0,a={unversionedId:"mind-garden/Object-Oriented Design OOD/Open-closed Principle",id:"mind-garden/Object-Oriented Design OOD/Open-closed Principle",title:"Open-closed Principle",description:"Open-closed Principle (OCP) states:",source:"@site/docs/mind-garden/Object-Oriented Design OOD/Open-closed Principle.md",sourceDirName:"mind-garden/Object-Oriented Design OOD",slug:"/mind-garden/Object-Oriented Design OOD/Open-closed Principle",permalink:"/docs/mind-garden/Object-Oriented Design OOD/Open-closed Principle",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Liskov Substitution Principle",permalink:"/docs/mind-garden/Object-Oriented Design OOD/Liskov Substitution Principle"},next:{title:"Single-responsibility Principle (SRP)",permalink:"/docs/mind-garden/Object-Oriented Design OOD/Single-responsibility Principle (SRP)"}},l={},p=[],s={toc:p};function O(e){let{components:n,...t}=e;return(0,i.kt)("wrapper",(0,r.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Open-closed Principle (OCP) states:"),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Objects or entities should be open for extension but closed for modification.")))}O.isMDXComponent=!0}}]);