"use strict";(self.webpackChunkapp_src=self.webpackChunkapp_src||[]).push([[2999],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>g});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),m=l(n),g=o,f=m["".concat(c,".").concat(g)]||m[g]||u[g]||a;return n?r.createElement(f,i(i({ref:t},s),{},{components:n})):r.createElement(f,i({ref:t},s))}));function g(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=m;var p={};for(var c in t)hasOwnProperty.call(t,c)&&(p[c]=t[c]);p.originalType=e,p.mdxType="string"==typeof e?e:o,i[1]=p;for(var l=2;l<a;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},40477:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>p,toc:()=>l});var r=n(87462),o=(n(67294),n(3905));const a={id:"gpt4-mobile",title:"GPT4-Mobile",tags:["openai","chatgpt"]},i=void 0,p={unversionedId:"chatgpt/gpt4-mobile",id:"chatgpt/gpt4-mobile",title:"GPT4-Mobile",description:"",source:"@site/docs/chatgpt/gpt4-mobile.md",sourceDirName:"chatgpt",slug:"/chatgpt/gpt4-mobile",permalink:"/app/docs/chatgpt/gpt4-mobile",draft:!1,tags:[{label:"openai",permalink:"/app/docs/tags/openai"},{label:"chatgpt",permalink:"/app/docs/tags/chatgpt"}],version:"current",frontMatter:{id:"gpt4-mobile",title:"GPT4-Mobile",tags:["openai","chatgpt"]},sidebar:"tutorialSidebar",previous:{title:"ChatGPT",permalink:"/app/docs/category/chatgpt"},next:{title:"Useful Userscript ChatGPT",permalink:"/app/docs/chatgpt/useful-userscript-chatgpt"}},c={},l=[],s={toc:l};function u(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="gpt4-mobile.js"',title:'"gpt4-mobile.js"'},'// ==UserScript==\n// @name         ChatGPT\u5f00\u542f\u4e0d\u9650\u6b21\u6570\u7684GPT4-Mobile\n// @namespace    https://chat.openai.com/\n// @description  \u53d6\u81eaiOS\u5ba2\u6237\u7aef\u7684GPT4\u6a21\u578b, \u548cGPT4\u4e00\u6837\u4ec5\u9650Plus\u4f1a\u5458\u4f7f\u7528\n// @version      0.3\n// @match        https://chat.openai.com/*\n// @run-at       document-start\n// @author       braumye\n// @grant        unsafeWindow\n// @license      MIT\n// ==/UserScript==\n\n(function () {\n    const originFetch = fetch;\n    window.unsafeWindow.fetch = (url, options) => {\n        return originFetch(url, options).then(async (response) => {\n            if (url.indexOf(\'/backend-api/models\') === -1) {\n                return response;\n            }\n            const responseClone = response.clone();\n            let res = await responseClone.json();\n            res.models = res.models.map(m => {\n                m.tags = m.tags.filter(t => {\n                    return t !== \'mobile\';\n                });\n                if (m.slug === \'gpt-4-mobile\') {\n                    res.categories.push({\n                        browsing_model: null,\n                        category: "gpt_4",\n                        code_interpreter_model: null,\n                        default_model: "gpt-4-mobile",\n                        human_category_name: "GPT-4-Mobile",\n                        plugins_model: null,\n                        subscription_level: "plus",\n                    });\n                }\n                return m;\n            });\n\n            return new Response(JSON.stringify(res), response);\n        });\n    };\n})();\n')))}u.isMDXComponent=!0}}]);