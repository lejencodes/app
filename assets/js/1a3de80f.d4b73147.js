"use strict";(self.webpackChunkapp_src=self.webpackChunkapp_src||[]).push([[3556],{3905:(e,n,r)=>{r.d(n,{Zo:()=>s,kt:()=>m});var t=r(7294);function i(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function o(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function p(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?o(Object(r),!0).forEach((function(n){i(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function a(e,n){if(null==e)return{};var r,t,i=function(e,n){if(null==e)return{};var r,t,i={},o=Object.keys(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||(i[r]=e[r]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var c=t.createContext({}),l=function(e){var n=t.useContext(c),r=n;return e&&(r="function"==typeof e?e(n):p(p({},n),e)),r},s=function(e){var n=l(e.components);return t.createElement(c.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},u=t.forwardRef((function(e,n){var r=e.components,i=e.mdxType,o=e.originalType,c=e.parentName,s=a(e,["components","mdxType","originalType","parentName"]),u=l(r),m=i,g=u["".concat(c,".").concat(m)]||u[m]||d[m]||o;return r?t.createElement(g,p(p({ref:n},s),{},{components:r})):t.createElement(g,p({ref:n},s))}));function m(e,n){var r=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=r.length,p=new Array(o);p[0]=u;var a={};for(var c in n)hasOwnProperty.call(n,c)&&(a[c]=n[c]);a.originalType=e,a.mdxType="string"==typeof e?e:i,p[1]=a;for(var l=2;l<o;l++)p[l]=r[l];return t.createElement.apply(null,p)}return t.createElement.apply(null,r)}u.displayName="MDXCreateElement"},2963:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>p,default:()=>d,frontMatter:()=>o,metadata:()=>a,toc:()=>l});var t=r(7462),i=(r(7294),r(3905));const o={id:"solid-principle",title:"Solid Principle",tags:["solid"]},p="SOLID",a={unversionedId:"programming/object-oriented-design/solid-principle",id:"programming/object-oriented-design/solid-principle",title:"Solid Principle",description:"SOLID is an acronym for the first five object-oriented design (OOD) principles by Robert C. Martin (also known",source:"@site/docs/programming/object-oriented-design/solid-principle.md",sourceDirName:"programming/object-oriented-design",slug:"/programming/object-oriented-design/solid-principle",permalink:"/docs/programming/object-oriented-design/solid-principle",draft:!1,tags:[{label:"solid",permalink:"/docs/tags/solid"}],version:"current",frontMatter:{id:"solid-principle",title:"Solid Principle",tags:["solid"]},sidebar:"tutorialSidebar",previous:{title:"Single Responsibility Principle",permalink:"/docs/programming/object-oriented-design/single-responsibility-principle"},next:{title:"Something To Learn about Typescript",permalink:"/docs/programming/typescript/something-to-learn-about-typescript"}},c={},l=[],s={toc:l};function d(e){let{components:n,...r}=e;return(0,i.kt)("wrapper",(0,t.Z)({},s,r,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"solid"},"SOLID"),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"SOLID")," is an acronym for the first five object-oriented design (OOD) principles by Robert C. Martin (also known\nas ",(0,i.kt)("a",{parentName:"p",href:"http://en.wikipedia.org/wiki/Robert_Cecil_Martin"},"Uncle Bob"),")."),(0,i.kt)("p",null,"[","[Single-responsibility Principle (SRP)]","]\n[","[Open-closed Principle]","]\n[","[Liskov Substitution Principle]","]\n[","[Interface segregation principle]","]\n[","[Dependency inversion principle]","]"),(0,i.kt)("p",null,"Inheritance is not code-sharing\nIs a relationship\nNeed to share common logic\nSharing just properties or method signature is not enough\nInheritance can put you in a corner\nWhat is the point?"))}d.isMDXComponent=!0}}]);