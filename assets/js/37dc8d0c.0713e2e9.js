"use strict";(self.webpackChunkapp_src=self.webpackChunkapp_src||[]).push([[4834],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>d});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var i=r.createContext({}),c=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(i.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,i=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=c(n),d=o,f=m["".concat(i,".").concat(d)]||m[d]||u[d]||a;return n?r.createElement(f,s(s({ref:t},p),{},{components:n})):r.createElement(f,s({ref:t},p))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,s=new Array(a);s[0]=m;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l.mdxType="string"==typeof e?e:o,s[1]=l;for(var c=2;c<a;c++)s[c]=n[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},6615:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>s,default:()=>u,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var r=n(7462),o=(n(7294),n(3905));const a={},s="Dotnet test command",l={unversionedId:"mind-garden/Dev Notes/Dotnet/Dotnet test command",id:"mind-garden/Dev Notes/Dotnet/Dotnet test command",title:"Dotnet test command",description:"[Dotnet/Dotnet]",source:"@site/docs/mind-garden/Dev Notes/Dotnet/Dotnet test command.md",sourceDirName:"mind-garden/Dev Notes/Dotnet",slug:"/mind-garden/Dev Notes/Dotnet/Dotnet test command",permalink:"/docs/mind-garden/Dev Notes/Dotnet/Dotnet test command",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Dotnet add source",permalink:"/docs/mind-garden/Dev Notes/Dotnet/Dotnet add source"},next:{title:"For-Each-with-Index",permalink:"/docs/mind-garden/Dev Notes/Dotnet/For-Each-with-Index"}},i={},c=[],p={toc:c};function u(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"dotnet-test-command"},"Dotnet test command"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"/docs/mind-garden/Dev%20Notes/Dotnet/"},"[Dotnet/Dotnet]")),(0,o.kt)("p",null,'dotnet test "--logger:junit;LogFilePath=./test-reports/results.xml" ./Project.Tests.xxx -v n --no-build --filter TestCategory=xxx -- NUnit.NumberOfTestWorkers=10 -- TestRunParameters.Parameter',"(",'name=\\"BUILD_NAME\\", value=\\"xxx\\"',")"," -- TestRunParameters.Parameter","(",'name=\\"RUN_ID\\", value=\\"0\\"',")"),(0,o.kt)("p",null,"The \u2013\u2013filter option can be used to fine tune which tests are executed."),(0,o.kt)("p",null,"For example to run the single test Test1 in TestClass1:"),(0,o.kt)("p",null,"dotnet test --filter DisplayName=XUnitTestProject1.TestClass1.Test1"),(0,o.kt)("p",null,"To run all the tests in a single test class, the ~ \u201ccontains\u201d operator can be used, for example:"),(0,o.kt)("p",null,"dotnet test --filter DisplayName~XUnitTestProject1.TestClass1"),(0,o.kt)("p",null,"To run all tests with a specific category (trait), for example all the \u201cSmoke Tests\u201d (in xUnit.net this would be the attribute ",'[Trait("Category", "Smoke Test")]',"):"),(0,o.kt)("p",null,'dotnet test --filter Category="Smoke Test"'),(0,o.kt)("p",null,"The ! \u201cnot\u201d operator can be used as part of the filter expression, for example to run all tests except for Test1:"),(0,o.kt)("p",null,"dotnet test --filter FullyQualifiedName!=XUnitTestProject1.TestClass1.Test1"))}u.isMDXComponent=!0}}]);