"use strict";(self.webpackChunkapp_src=self.webpackChunkapp_src||[]).push([[8923],{3905:(e,t,a)=>{a.d(t,{Zo:()=>i,kt:()=>u});var r=a(67294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function c(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var p=r.createContext({}),l=function(e){var t=r.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):c(c({},t),e)),a},i=function(e){var t=l(e.components);return r.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},g=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,p=e.parentName,i=s(e,["components","mdxType","originalType","parentName"]),g=l(a),u=n,m=g["".concat(p,".").concat(u)]||g[u]||d[u]||o;return a?r.createElement(m,c(c({ref:t},i),{},{components:a})):r.createElement(m,c({ref:t},i))}));function u(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,c=new Array(o);c[0]=g;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s.mdxType="string"==typeof e?e:n,c[1]=s;for(var l=2;l<o;l++)c[l]=a[l];return r.createElement.apply(null,c)}return r.createElement.apply(null,a)}g.displayName="MDXCreateElement"},42263:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>c,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var r=a(87462),n=(a(67294),a(3905));const o={id:"basic-of-argocd",title:"Basic of ArgoCD",tags:["ci","argocd"]},c=void 0,s={unversionedId:"programming/ci/basic-of-argocd",id:"programming/ci/basic-of-argocd",title:"Basic of ArgoCD",description:"Getting started",source:"@site/docs/programming/ci/basic-of-argocd.md",sourceDirName:"programming/ci",slug:"/programming/ci/basic-of-argocd",permalink:"/app/docs/programming/ci/basic-of-argocd",draft:!1,tags:[{label:"ci",permalink:"/app/docs/tags/ci"},{label:"argocd",permalink:"/app/docs/tags/argocd"}],version:"current",frontMatter:{id:"basic-of-argocd",title:"Basic of ArgoCD",tags:["ci","argocd"]},sidebar:"tutorialSidebar",previous:{title:"CI",permalink:"/app/docs/category/ci"},next:{title:"Basic of CircleCI",permalink:"/app/docs/programming/ci/basic-of-circleci"}},p={},l=[{value:"Getting started",id:"getting-started",level:2},{value:"Accessing the Web UI",id:"accessing-the-web-ui",level:2},{value:"Get pass",id:"get-pass",level:2},{value:"Reset pass",id:"reset-pass",level:2},{value:"Add app",id:"add-app",level:2},{value:"Delete all",id:"delete-all",level:2}],i={toc:l};function d(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,r.Z)({},i,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h2",{id:"getting-started"},"Getting started"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"minikube start\nminikube dashboard\n")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"# To delete all and start fresh\nkubectl delete deployment --all\n")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"minikube delete\nminikube start\n")),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/arthurk/argocd-example-install/"},"https://github.com/arthurk/argocd-example-install/")),(0,n.kt)("h2",{id:"accessing-the-web-ui"},"Accessing the Web UI"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"helm install argo-cd charts/argo-cd/\n")),(0,n.kt)("p",null,"The Helm chart doesn\u2019t install an Ingress by default, to access the Web UI we have to port-forward to the argocd-server\nservice:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"kubectl port-forward svc/argo-cd-argocd-server 8080:443\n")),(0,n.kt)("h2",{id:"get-pass"},"Get pass"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},'kubectl get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 -d\n')),(0,n.kt)("h2",{id:"reset-pass"},"Reset pass"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://www.browserling.com/tools/bcrypt"},"https://www.browserling.com/tools/bcrypt")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},'# generated with autotest\n\n<default> is namespace\n\nkubectl -n default patch secret argocd-secret \\\n\n-p \'{"stringData": {"admin.password": "$2a$10$xxx","admin.passwordMtime": "\'$(date +%FT%T%Z)\'"}}\'\n\nargocd repo add git@bitbucket.org:xxx/abc-autotest.git --ssh-private-key-path ~/.ssh/id_rsa_argo\n\nhttps://github.com/redhat-developer-demos/openshift-gitops-examples.git\n')),(0,n.kt)("h2",{id:"add-app"},"Add app"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},'argocd app create guestbook --repo https://github.com/argoproj/argocd-example-apps.git --path guestbook --dest-server https://kubernetes.default.svc --dest-namespace default\n\nargocd app get guestbook\n\nargocd app sync guestbook\n\nkubectl port-forward svc/helm-guestbook 9090:80\n\nkubectl port-forward svc/guestbook-ui 9090:80\n\nforce patch revision target\n\nargocd app patch root --patch \'[{"op": "replace", "path": "/spec/source/targetRevision", "value": "test/bb-pipeline"}]\'\n\nhelm template apps/ | kubectl apply -f -\n')),(0,n.kt)("h2",{id:"delete-all"},"Delete all"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl delete all --all --all-namespaces\n")))}d.isMDXComponent=!0}}]);