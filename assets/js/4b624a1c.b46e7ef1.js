"use strict";(self.webpackChunkapp_src=self.webpackChunkapp_src||[]).push([[6936],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>d});var a=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function p(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},l=Object.keys(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var i=a.createContext({}),s=function(e){var t=a.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):p(p({},t),e)),r},c=function(e){var t=s(e.components);return a.createElement(i.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,l=e.originalType,i=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),u=s(r),d=n,v=u["".concat(i,".").concat(d)]||u[d]||m[d]||l;return r?a.createElement(v,p(p({ref:t},c),{},{components:r})):a.createElement(v,p({ref:t},c))}));function d(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=r.length,p=new Array(l);p[0]=u;var o={};for(var i in t)hasOwnProperty.call(t,i)&&(o[i]=t[i]);o.originalType=e,o.mdxType="string"==typeof e?e:n,p[1]=o;for(var s=2;s<l;s++)p[s]=r[s];return a.createElement.apply(null,p)}return a.createElement.apply(null,r)}u.displayName="MDXCreateElement"},34575:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>i,contentTitle:()=>p,default:()=>m,frontMatter:()=>l,metadata:()=>o,toc:()=>s});var a=r(87462),n=(r(67294),r(3905));const l={id:"install-app-altserver-daemon",title:"Install App Altserver Daemon",tags:["altserver"]},p=void 0,o={unversionedId:"altserver/install-app-altserver-daemon",id:"altserver/install-app-altserver-daemon",title:"Install App Altserver Daemon",description:"- Install IPA: ./AltServer -u [UDID] -a [AppleID account] -p [AppleID password] [ipaPath.ipa]",source:"@site/docs/altserver/install-app.md",sourceDirName:"altserver",slug:"/altserver/install-app-altserver-daemon",permalink:"/app/docs/altserver/install-app-altserver-daemon",draft:!1,tags:[{label:"altserver",permalink:"/app/docs/tags/altserver"}],version:"current",frontMatter:{id:"install-app-altserver-daemon",title:"Install App Altserver Daemon",tags:["altserver"]},sidebar:"tutorialSidebar",previous:{title:"Get Device Unique Id",permalink:"/app/docs/altserver/get-device-udid"},next:{title:"App",permalink:"/app/docs/category/app"}},i={},s=[],c={toc:s};function m(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,a.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Install IPA: ",(0,n.kt)("inlineCode",{parentName:"li"},"./AltServer -u [UDID] -a [AppleID account] -p [AppleID password] [ipaPath.ipa]")),(0,n.kt)("li",{parentName:"ul"},"Running as AltServer Daemon: ",(0,n.kt)("inlineCode",{parentName:"li"},"./AltServer"))),(0,n.kt)("p",null,"Here's my guide to get it running again:"),(0,n.kt)("p",null,"Your architecture may differ, so I will refer to the executable as ",(0,n.kt)("inlineCode",{parentName:"p"},"anisette-server"),"."),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Download an alternative ",(0,n.kt)("inlineCode",{parentName:"p"},"anisette-server")," from ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/Dadoum/Provision/releases/tag/2.1.0"},"GitHub"),".")),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Extract it, mark it as executable:"),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-shell"},"chmod +111 anisette-server\n"))),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Run it like this:"),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-shell"},"./anisette-server -n 127.0.0.1 -p 6969\n")),(0,n.kt)("p",{parentName:"li"},"These are my hostname (argument -n) and port (-p) of choice; you may pick something else.")),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Open a new window/screen/etc.")),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Export the environment variable for AltServer so it connects to our server:"),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-shell"},"export ALTSERVER_ANISETTE_SERVER=http://127.0.0.1:6969\n"))),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Run AltServer; it should work!"),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-shell"},"./AltServer\n")))))}m.isMDXComponent=!0}}]);