"use strict";(self.webpackChunkapp_src=self.webpackChunkapp_src||[]).push([[4869],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>m});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var i=n.createContext({}),p=function(e){var t=n.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},u=function(e){var t=p(e.components);return n.createElement(i.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),c=p(r),m=a,f=c["".concat(i,".").concat(m)]||c[m]||d[m]||o;return r?n.createElement(f,l(l({ref:t},u),{},{components:r})):n.createElement(f,l({ref:t},u))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,l=new Array(o);l[0]=c;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s.mdxType="string"==typeof e?e:a,l[1]=s;for(var p=2;p<o;p++)l[p]=r[p];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}c.displayName="MDXCreateElement"},2830:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>i,contentTitle:()=>l,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>p});var n=r(7462),a=(r(7294),r(3905));const o={id:"setup-deluge-for-raspberry-pi",title:"Setup Deluge For Raspberry Pi",tags:["deluge"]},l=void 0,s={unversionedId:"raspberry-pi/setup-deluge-for-raspberry-pi",id:"raspberry-pi/setup-deluge-for-raspberry-pi",title:"Setup Deluge For Raspberry Pi",description:"[[deluge]]",source:"@site/docs/raspberry-pi/setup-deluge-for-raspberry-pi.md",sourceDirName:"raspberry-pi",slug:"/raspberry-pi/setup-deluge-for-raspberry-pi",permalink:"/docs/raspberry-pi/setup-deluge-for-raspberry-pi",draft:!1,tags:[{label:"deluge",permalink:"/docs/tags/deluge"}],version:"current",frontMatter:{id:"setup-deluge-for-raspberry-pi",title:"Setup Deluge For Raspberry Pi",tags:["deluge"]},sidebar:"tutorialSidebar",previous:{title:"List Of Nord Vpn Command",permalink:"/docs/raspberry-pi/list-of-nord-vpn-command"},next:{title:"Setup Pi Hole For Raspberry Pi",permalink:"/docs/raspberry-pi/setup-pi-hole-for-raspberry-pi"}},i={},p=[],u={toc:p};function d(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"[","[deluge]","]"),(0,a.kt)("h1",{id:"fix-if-web-ui-doesnt-connect-automatically-to-daemon"},"Fix if Web Ui doesn't connect Automatically to Daemon"),(0,a.kt)("p",null,"Set 127.0.0.1:58846 as default daemon"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"chmod 444 ~/.config/deluge/web.conf\nreboot\n")),(0,a.kt)("p",null,"Deluged (the background daemon) ships as disabled so we need to enable it before proceeding:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"sudo nano /etc/default/deluged\n")),(0,a.kt)("p",null,"and change ENABLE_DELUGED=0 to ENABLE_DELUGED=1"),(0,a.kt)("p",null,"OSMC uses systemd instead of the older init.d method of starting services, so lets use that to deal with starting things\nautomatically at boot time, it will make managing things easier later on."),(0,a.kt)("p",null,"Firstly, delete the old way to prevent future confusion:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"sudo update-rc.d deluged remove\nsudo rm /etc/init.d/deluged\n")),(0,a.kt)("p",null,"Then create a systemd unit as follows:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"sudo nano /etc/systemd/system/deluged.service\n")),(0,a.kt)("p",null,"and add the following text:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ini"},"\n[Unit]\n\nDescription = Deluge Bittorent Daemon\nAfter = network-online.target\n\n[Service]\n\nType = simple\nUser = debian-deluged\nGroup = debian-deluged\nUMask = 007\nExecStart = /usr/bin/deluged -d\nRestart = on-failure\n\n# Configures the time to wait before service is stopped forcefully.\nTimeoutStopSec = 300\n\n[Install]\nWantedBy = multi-user.target\n\n")),(0,a.kt)("p",null,"Finally for this step systemd needs to be made aware of the new files and then reloaded to pick up the new unit."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"sudo systemctl daemon-reload\nsudo systemctl enable deluged.service\n")),(0,a.kt)("p",null,"The daemon can now be started with sudo systemctl start deluged and will run automatically when the machine boots up,\nalthough we need to configure a few things before it will work correctly:"))}d.isMDXComponent=!0}}]);