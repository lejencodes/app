"use strict";(self.webpackChunkapp_src=self.webpackChunkapp_src||[]).push([[5636],{3905:(e,t,n)=>{n.d(t,{Zo:()=>i,kt:()=>m});var o=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=o.createContext({}),u=function(e){var t=o.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},i=function(e){var t=u(e.components);return o.createElement(p.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,p=e.parentName,i=l(e,["components","mdxType","originalType","parentName"]),d=u(n),m=r,g=d["".concat(p,".").concat(m)]||d[m]||c[m]||a;return n?o.createElement(g,s(s({ref:t},i),{},{components:n})):o.createElement(g,s({ref:t},i))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,s=new Array(a);s[0]=d;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:r,s[1]=l;for(var u=2;u<a;u++)s[u]=n[u];return o.createElement.apply(null,s)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"},21839:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>s,default:()=>c,frontMatter:()=>a,metadata:()=>l,toc:()=>u});var o=n(87462),r=(n(67294),n(3905));const a={id:"setup-mongodb",title:"Setup MongoDb",tags:["mongodb","setup"]},s=void 0,l={unversionedId:"config-and-setup/setup-mongodb",id:"config-and-setup/setup-mongodb",title:"Setup MongoDb",description:"Setup and Installation",source:"@site/docs/config-and-setup/setup-mongodb.md",sourceDirName:"config-and-setup",slug:"/config-and-setup/setup-mongodb",permalink:"/app/docs/config-and-setup/setup-mongodb",draft:!1,tags:[{label:"mongodb",permalink:"/app/docs/tags/mongodb"},{label:"setup",permalink:"/app/docs/tags/setup"}],version:"current",frontMatter:{id:"setup-mongodb",title:"Setup MongoDb",tags:["mongodb","setup"]},sidebar:"tutorialSidebar",previous:{title:"Setup Deluge For Raspberry Pi",permalink:"/app/docs/config-and-setup/setup-deluge-for-raspberry-pi"},next:{title:"setup-obsidian",permalink:"/app/docs/config-and-setup/setup-obsidian"}},p={},u=[{value:"Setup and Installation",id:"setup-and-installation",level:2}],i={toc:u};function c(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,o.Z)({},i,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"setup-and-installation"},"Setup and Installation"),(0,r.kt)("p",null,"Visit ",(0,r.kt)("a",{parentName:"p",href:"https://www.mongodb.com/docs/manual/tutorial/install-mongodb-on-ubuntu/"},"https://www.mongodb.com/docs/manual/tutorial/install-mongodb-on-ubuntu/")),(0,r.kt)("p",null,"Start MongoDB.\nYou can start the mongod process by issuing the following command:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"sudo systemctl start mongod\n")),(0,r.kt)("p",null,"If you receive an error similar to the following when starting mongod:"),(0,r.kt)("p",null,"Failed to start mongod.service: Unit mongod.service not found."),(0,r.kt)("p",null,"Run the following command first:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"sudo systemctl daemon-reload\n")),(0,r.kt)("p",null,"Then run the start command above again."),(0,r.kt)("p",null,"Verify that MongoDB has started successfully."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"sudo systemctl status mongod\n")),(0,r.kt)("p",null,"You can optionally ensure that MongoDB will start following a system reboot by issuing the following command:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"sudo systemctl enable mongod\n")),(0,r.kt)("p",null,"Stop MongoDB.\nAs needed, you can stop the mongod process by issuing the following command:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"sudo systemctl stop mongod\n")),(0,r.kt)("p",null,"Restart MongoDB.\nYou can restart the mongod process by issuing the following command:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"sudo systemctl restart mongod\n")))}c.isMDXComponent=!0}}]);