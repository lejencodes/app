"use strict";(self.webpackChunkapp_src=self.webpackChunkapp_src||[]).push([[3078],{3905:(e,r,t)=>{t.d(r,{Zo:()=>s,kt:()=>d});var n=t(67294);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function c(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=n.createContext({}),p=function(e){var r=n.useContext(l),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},s=function(e){var r=p(e.components);return n.createElement(l.Provider,{value:r},e.children)},u={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},m=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),m=p(t),d=a,g=m["".concat(l,".").concat(d)]||m[d]||u[d]||o;return t?n.createElement(g,i(i({ref:r},s),{},{components:t})):n.createElement(g,i({ref:r},s))}));function d(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=m;var c={};for(var l in r)hasOwnProperty.call(r,l)&&(c[l]=r[l]);c.originalType=e,c.mdxType="string"==typeof e?e:a,i[1]=c;for(var p=2;p<o;p++)i[p]=t[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}m.displayName="MDXCreateElement"},83279:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>c,toc:()=>p});var n=t(87462),a=(t(67294),t(3905));const o={id:"git-worktree",title:"Git Worktree",tags:["git","worktree"]},i=void 0,c={unversionedId:"programming/tools/git-worktree",id:"programming/tools/git-worktree",title:"Git Worktree",description:"Create feature-x directory and branch with the same name.",source:"@site/docs/programming/tools/git-worktree.md",sourceDirName:"programming/tools",slug:"/programming/tools/git-worktree",permalink:"/app/docs/programming/tools/git-worktree",draft:!1,tags:[{label:"git",permalink:"/app/docs/tags/git"},{label:"worktree",permalink:"/app/docs/tags/worktree"}],version:"current",frontMatter:{id:"git-worktree",title:"Git Worktree",tags:["git","worktree"]},sidebar:"tutorialSidebar",previous:{title:"Git Multiple Repo",permalink:"/app/docs/programming/tools/git-multiple-repo"},next:{title:"Rider Multi Cursor For Mac",permalink:"/app/docs/programming/tools/rider-multi-cursor-for-mac"}},l={},p=[{value:"Create feature-x directory and branch with the same name.",id:"create-feature-x-directory-and-branch-with-the-same-name",level:2},{value:"Named Branch (optional)",id:"named-branch-optional",level:2},{value:"Track remote branch (optional)",id:"track-remote-branch-optional",level:2},{value:"For existing branch",id:"for-existing-branch",level:3}],s={toc:p};function u(e){let{components:r,...t}=e;return(0,a.kt)("wrapper",(0,n.Z)({},s,t,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"git worktree add <PATH>\n")),(0,a.kt)("h2",{id:"create-feature-x-directory-and-branch-with-the-same-name"},"Create feature-x directory and branch with the same name."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"git worktree add ../feature-x\n")),(0,a.kt)("h2",{id:"named-branch-optional"},"Named Branch (optional)"),(0,a.kt)("p",null,"If you want to give you branch a unique name then you can use the -b flag with the add command."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"git worktree add -b feature-xyz ../feature-xyz\n")),(0,a.kt)("h2",{id:"track-remote-branch-optional"},"Track remote branch (optional)"),(0,a.kt)("p",null,"Let\u2019s say you want to switch to a new branch that is tracking the branch at remote, where you want to push changes to."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"git worktree add -b <branch-name> <PATH> <remote>/<branch-name>\n\ngit worktree add -b feature-zzz ../feature-x origin/feature-zzz\n\ngit worktree add --track -b <branch> <path> <remote>/<branch>\n\nusage: git worktree add [<options>] <path> [<commit-ish>]\n\nor: git worktree list [<options>]\n\nor: git worktree lock [<options>] <path>\n\nor: git worktree move <worktree> <new-path>\n\nor: git worktree prune [<options>]\n\nor: git worktree remove [<options>] <worktree>\n\nor: git worktree unlock <path>\n")),(0,a.kt)("h3",{id:"for-existing-branch"},"For existing branch"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"git worktree add --track -b <branch> <path> <remote>/<branch>\ngit worktree add --track -b branchname ../folder origin/branchname\n")))}u.isMDXComponent=!0}}]);