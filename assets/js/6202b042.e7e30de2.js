"use strict";(self.webpackChunkapp_src=self.webpackChunkapp_src||[]).push([[419],{3905:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>d});var n=r(7294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function p(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var a=n.createContext({}),c=function(e){var t=n.useContext(a),r=t;return e&&(r="function"==typeof e?e(t):p(p({},t),e)),r},l=function(e){var t=c(e.components);return n.createElement(a.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},b=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,o=e.originalType,a=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),b=c(r),d=i,m=b["".concat(a,".").concat(d)]||b[d]||u[d]||o;return r?n.createElement(m,p(p({ref:t},l),{},{components:r})):n.createElement(m,p({ref:t},l))}));function d(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=r.length,p=new Array(o);p[0]=b;var s={};for(var a in t)hasOwnProperty.call(t,a)&&(s[a]=t[a]);s.originalType=e,s.mdxType="string"==typeof e?e:i,p[1]=s;for(var c=2;c<o;c++)p[c]=r[c];return n.createElement.apply(null,p)}return n.createElement.apply(null,r)}b.displayName="MDXCreateElement"},4302:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>a,contentTitle:()=>p,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var n=r(7462),i=(r(7294),r(3905));const o={id:"liskov-substitution-principle",title:"Liskov Substitution Principle",tags:["solid","lsp"]},p=void 0,s={unversionedId:"programming/object-oriented-design/liskov-substitution-principle",id:"programming/object-oriented-design/liskov-substitution-principle",title:"Liskov Substitution Principle",description:"Liskov Substitution Principle states:",source:"@site/docs/programming/object-oriented-design/liskov-substitution-principle.md",sourceDirName:"programming/object-oriented-design",slug:"/programming/object-oriented-design/liskov-substitution-principle",permalink:"/app/docs/programming/object-oriented-design/liskov-substitution-principle",draft:!1,tags:[{label:"solid",permalink:"/app/docs/tags/solid"},{label:"lsp",permalink:"/app/docs/tags/lsp"}],version:"current",frontMatter:{id:"liskov-substitution-principle",title:"Liskov Substitution Principle",tags:["solid","lsp"]},sidebar:"tutorialSidebar",previous:{title:"Interface Segregation Principle",permalink:"/app/docs/programming/object-oriented-design/interface-segregation-principle"},next:{title:"Open Closed Principle",permalink:"/app/docs/programming/object-oriented-design/open-closed-principle"}},a={},c=[],l={toc:c};function u(e){let{components:t,...r}=e;return(0,i.kt)("wrapper",(0,n.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Liskov Substitution Principle states:"),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Let q(x) be a property provable about objects of x of type T. Then q(y) should be provable for objects y of type S\nwhere S is a subtype of T.")))}u.isMDXComponent=!0}}]);