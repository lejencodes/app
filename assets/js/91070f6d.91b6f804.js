"use strict";(self.webpackChunkapp_src=self.webpackChunkapp_src||[]).push([[7274],{61597:e=>{e.exports=JSON.parse('{"blogPosts":[{"id":"what-is-the-robot-framework-and-how-does-it-function","metadata":{"permalink":"/app/blog/what-is-the-robot-framework-and-how-does-it-function","source":"@site/blog/2023-01-07-what-is-robot-framework-and-how-does-it-function.md","title":"What Is The Robot Framework, And How Does It Function?","description":"What is Robot Framework?","date":"2023-01-07T00:00:00.000Z","formattedDate":"January 7, 2023","tags":[{"label":"robotframework","permalink":"/app/blog/tags/robotframework"},{"label":"rf","permalink":"/app/blog/tags/rf"},{"label":"automation","permalink":"/app/blog/tags/automation"},{"label":"robot","permalink":"/app/blog/tags/robot"}],"readingTime":1.29,"hasTruncateMarker":false,"authors":[{"name":"koficodes","title":"Just a person","url":"https://koficodes.xyz","imageURL":"https://github.com/lejencodes.png","key":"koficodes"}],"frontMatter":{"slug":"what-is-the-robot-framework-and-how-does-it-function","title":"What Is The Robot Framework, And How Does It Function?","authors":["koficodes"],"tags":["robotframework","rf","automation","robot"]},"unlisted":false,"nextItem":{"title":"Git Submodule Command","permalink":"/app/blog/git-submodule-command"}},"content":"## What is Robot Framework?\\n\\nRobot Framework is a generic open-source automation framework for acceptance testing, acceptance test-driven\\ndevelopment (ATDD), and robotic process automation (RPA). Robot Framework allows testers to easily write automated test\\nscripts using a keyword-driven testing approach.\\n\\n## How does RobotFramework Function?\\n\\nTo test both Android and iOS apps, Robot Framework is incredibly simple to set up, use, and change.\\n\\nIts test syntax is built around keywords, which are simple to alter and further configure to match the application being\\ntested.\\n\\nAdditionally, the test libraries that may be implemented in Python, Java, and even some additional languages are\\nsupported, allowing for easy extension of a testing capabilities offered by Robot Framework.\\n\\nThe way those aforementioned keywords function is one of Robot Framework\'s coolest features.\\n\\nUsers can quickly build new keywords by starting from scratch or by using the existing sample ones.\\n\\nIf you look for more generic information about Robot Framework, there are plenty of great examples and online\\ndocumentation on [GitHub](https://github.com/robotframework/robotframework).\\n\\n## How to write scripts for automated tests in RobotFramework\\n\\nRobot Framework makes it simple to create automated test scripts. In addition to being utilized to carry out activities,\\nkeywords also serve as assertion methods. They may experience arguments in an effort to shape their conduct.\\n\\nThe examples \\"Open Browser\\" and \\"Title Should Be\\" up top are two good ones. Since many test libraries include the\\nnecessary automation components as keywords, you don\'t necessarily need to write Python or Java code.\\n\\n## Notes on RobotFramework Setup and Basics\\n\\nVisit documentation by searching robot-framework-setup-and-basics"},{"id":"git-submodule-command","metadata":{"permalink":"/app/blog/git-submodule-command","source":"@site/blog/2023-01-04-git-submodule-command.md","title":"Git Submodule Command","description":"Adding or Cloning a submodule","date":"2023-01-04T00:00:00.000Z","formattedDate":"January 4, 2023","tags":[{"label":"git","permalink":"/app/blog/tags/git"},{"label":"submodule","permalink":"/app/blog/tags/submodule"}],"readingTime":1.285,"hasTruncateMarker":false,"authors":[{"name":"koficodes","title":"Just a person","url":"https://koficodes.xyz","imageURL":"https://github.com/lejencodes.png","key":"koficodes"}],"frontMatter":{"slug":"git-submodule-command","title":"Git Submodule Command","authors":["koficodes"],"tags":["git","submodule"]},"unlisted":false,"prevItem":{"title":"What Is The Robot Framework, And How Does It Function?","permalink":"/app/blog/what-is-the-robot-framework-and-how-does-it-function"},"nextItem":{"title":"A Step By Step Guide To Setting Up Your Own Pi Hole And Enjoying Ad Free Browsing","permalink":"/app/blog/a-step-by-step-guide-to-setting-up-your-own-pi-hole-and-enjoying-ad-free-browsing"}},"content":"## Adding or Cloning a submodule\\n\\n```shell\\ngit submodule add <url>\\n```\\n\\n## Update All Submodules (no local changes)\\n\\nIf you do not have any local changes in your submodules, and all you want to do is consume new commits for your\\nsubmodules\' upstreams, you can run this command. It will go through each submodule, update remotes, and then update to\\nthe latest commit.\\n\\n```shell\\ngit submodule update --remote [--recursive]\\n``` \\n\\n## Update All Submodules (with local changes)\\n\\nIf you have made local changes to your submodules, and want to pull new changes from the submodules\' upstream, git makes\\nthis really simple. Make sure to specify whether you want to rebase or merge.\\n\\n```shell\\ngit submodule update --remote [--rebase | --merge] [--recursive]\\n```\\n\\n## Another Way to Update All Submodule\\n\\n```shell\\ngit submodule foreach --recursive git checkout master\\ngit submodule foreach --recursive git pull\\n```\\n\\n## Push Local Work to Submodule\\n\\nA submodule is nothing but a clone of a git repo within another repo with some extra metadata (gitlink tree entry,\\n.gitmodules file )\\n\\n```shell\\ncd your_submodule\\ngit checkout master\\ngit commit -a -m \\"commit in submodule\\"\\ngit push\\ncd ..\\ngit add your_submodule\\ngit commit -m \\"Updated submodule\\"\\n```\\n\\n## Common Error\\n\\n> fatal: Needed a single revision\\n> Unable to find current origin/master revision in submodule path \'xxFolder\'\\n> Fix by remove the folder and update again\\n\\n```shell\\nrm -rf xxFolder\\ngit submodule update\\n```\\n\\n## Removing a submodule\\n\\n```shell\\ngit submodule deinit path/to/module \\ngit rm path/to/module\\ngit commit -am \\"Removed submodule X\\" \\n```"},{"id":"a-step-by-step-guide-to-setting-up-your-own-pi-hole-and-enjoying-ad-free-browsing","metadata":{"permalink":"/app/blog/a-step-by-step-guide-to-setting-up-your-own-pi-hole-and-enjoying-ad-free-browsing","source":"@site/blog/2022-12-14-a-step-by-step-guide-to-setting-up-your-own-pi-hole-and-enjoying-ad-free-browsing.md","title":"A Step By Step Guide To Setting Up Your Own Pi Hole And Enjoying Ad Free Browsing","description":"Intro","date":"2022-12-14T00:00:00.000Z","formattedDate":"December 14, 2022","tags":[{"label":"raspberry-pi","permalink":"/app/blog/tags/raspberry-pi"},{"label":"pi-hole","permalink":"/app/blog/tags/pi-hole"},{"label":"installation","permalink":"/app/blog/tags/installation"},{"label":"adblock","permalink":"/app/blog/tags/adblock"},{"label":"vpn","permalink":"/app/blog/tags/vpn"}],"readingTime":6.92,"hasTruncateMarker":false,"authors":[{"name":"koficodes","title":"Just a person","url":"https://koficodes.xyz","imageURL":"https://github.com/lejencodes.png","key":"koficodes"}],"frontMatter":{"slug":"a-step-by-step-guide-to-setting-up-your-own-pi-hole-and-enjoying-ad-free-browsing","title":"A Step By Step Guide To Setting Up Your Own Pi Hole And Enjoying Ad Free Browsing","authors":["koficodes"],"tags":["raspberry-pi","pi-hole","installation","adblock","vpn"]},"unlisted":false,"prevItem":{"title":"Git Submodule Command","permalink":"/app/blog/git-submodule-command"},"nextItem":{"title":"Attempt To Fix 404 Error Google Search Console","permalink":"/app/blog/attempt-to-fix-404-error-google-search-console"}},"content":"## Intro\\n\\nTired of pesky ads cluttering your web-surfing experience? Rest assured, there\'s a simple remedy: installing Pi-Hole.\\nThis powerful tool can effectively banish those bothersome popups and ensure that you enjoy the smoothest browsing\\npossible! In this guide, we\'ll discuss what exactly Pi Hole is - as well as its many advantages. We\'ll also look at all\\nhardware requirements for setup before moving on to an easy step-by-step tutorial for installation. Plus, should any\\nissues arise during the process, don\'t worry; we\'ve got troubleshooting tips covered too! Finally, are some handy\\noptimization tricks so that you get maximum results from using Pi Hole. And if it doesn\u2019t turn out to be quite your cup\\nof tea after all\u2026 no worries \u2013 alternative solutions exist as well.\\n\\n## What is a Pi-Hole?\\n\\nA Pi-Hole is a Linux-based network-level advertisement and Internet tracker blocking application. It runs on a\\nnetwork-attached computer and acts as a DNS sinkhole that filters out unwanted content. It can block ads, trackers, and\\nmalicious websites from loading on all the devices connected to the network. The Pi-Hole is most commonly used on\\nRaspberry Pi devices, but can also be installed on any Linux operating system.\\n\\nThe Pi-Hole works by intercepting DNS requests from the devices connected to the network and blocking them if they match\\na list of known ad, tracker, and malicious websites. This means that when you browse the web, any requests sent to these\\nblocked websites are automatically blocked, resulting in an ad-free browsing experience.\\n\\n## Benefits of Setting Up a Pi-Hole\\n\\nSetting up a Pi-Hole offers several advantages. The most obvious one is that it can keep ads from appearing on any\\ndevices connected to your network, allowing you to have an ad-free browsing experience without having to install and run\\nany blocking plugins or extensions in your browser.\\n\\nMoreover, this also enhances privacy protection by halting trackers and malicious websites, thereby decreasing the\\namount of data accumulated about you online for greater security while surfing the web.\\n\\nBesides these benefits,\\ninstalling a Pi-Hole increases internet speed due to its capability of eliminating unnecessary information sent through\\nnetworks, thus resulting in faster connections!\\n\\n## Hardware Requirements for Setting Up a Pi-Hole\\n\\nBefore you can set up a Pi-Hole, you\'ll need to make sure that you have the right hardware. The most common hardware\\nused for a Pi-Hole is a Raspberry Pi. However, you can also use any Linux-based operating system on a computer or\\nserver.\\n\\nIf you\'re using a Raspberry Pi, you\'ll need to make sure that it has an Ethernet port, which is needed for the Pi-Hole\\ninstallation. You\'ll also need to make sure that you have a power adapter and a microSD card with at least 8GB of\\nstorage.\\n\\n## Step-by-Step Guide to Setting Up a Pi-Hole\\n\\nOnce you have the hardware ready, you can start the process of setting up a Pi-Hole. The first step is to download the\\nPi-Hole software. You can download it from the official website (https://pi-hole.net/).\\n\\nAfter that, you\'ll need to install the software on your Raspberry Pi or Linux-based computer. The installation process\\nis relatively simple and can be done using the command-line interface.\\n\\n```shell\\nsudo curl -sSL https://install.pi-hole.net | bash\\n```\\n\\nOr\\n\\n```shell\\nwget -O basic-install.sh https://install.pi-hole.net\\nsudo bash basic-install.sh\\n```\\n\\nOnce the installation is complete, you\'ll need to configure the Pi-Hole to block ads, trackers, and malicious websites.\\nYou can do this by adding the relevant domains to the blocklist. You can find the blocklist on the Pi-Hole website.\\n\\nOnce the blocklist is configured, you\'ll need to configure your network settings to use the Pi-Hole as the DNS server.\\nThis can be done by changing the DNS server address in your network settings.\\n\\nOnce the DNS server address is changed, you\'ll need to restart your router to apply the changes. Once the router is\\nrestarted, all the devices connected to the network will start using the Pi-Hole as their DNS server.\\n\\n## Troubleshooting Common Issues with Pi-Hole Setup\\n\\nSometimes, you might encounter some issues while setting up a Pi-Hole. One of the most common issues is that the Pi-Hole\\ndoesn\'t seem to be blocking any ads or trackers. This is usually because the blocklist is not configured correctly. To\\nfix this, make sure that the correct domains are added to the blocklist.\\n\\nAnother common issue is that the Pi-Hole seems to be blocking all websites. This is usually because the DNS server\\naddress is not configured correctly. To fix this, make sure that the correct DNS server address is set in the network\\nsettings.\\n\\n## Optimizing Your Pi-Hole for Maximum Performance\\n\\nOnce you\'ve set up your Pi-Hole, you can optimize it for maximum performance. One way to do this is to enable the\\nPi-Hole\'s built-in caching. This will help to reduce the amount of data being sent over the network, resulting in faster\\nspeeds.\\n\\nYou can also reduce the size of the blocklist to improve performance. The blocklist can get quite large over time, so\\nit\'s a good idea to keep an eye on it and remove any unnecessary domains.\\n\\nFinally, you can also configure the Pi-Hole to only block the domains that you don\'t want to see. This will help to\\nreduce the amount of data being sent over the network, resulting in faster speeds.\\n\\n## Pi-Hole Alternatives\\n\\nIf you don\'t want to set up a Pi-Hole, there are other alternatives available. One option is to use a browser extension\\nor plugin to block ads. These extensions and plugins can be installed on your browser and will block ads from all the\\nwebsites you visit.\\n\\nAnother option is to use a VPN. VPNs are a great way to protect your privacy and can also help to block ads. The\\ndownside is that they can be a bit slow, so you might want to try a different solution if speed is of the utmost\\nimportance.\\n\\nFinally, you can also use a DNS-level blocker, such as OpenDNS. Unlike a Pi-Hole, these DNS-level blockers are hosted on\\na remote server, so you don\'t need to set up any hardware. They\'re also easy to configure and can be used to block ads,\\ntrackers, and malicious websites.\\n\\n#### NoScript\\n\\nNoScript \u2013 NoScript is an extension for Firefox and Chrome that allows you to block requests for scripts or plug-ins\\nfrom third party websites by default. This can help you avoid some ads and trackers on websites, which may cause\\nproblems with high quality video streaming sites like YouTube or Netflix.\\n\\n#### AdBlock Plus\\n\\nAdBlock Plus \u2013 AdBlock Plus is a popular ad blocker that can be used on Android devices as well as desktop computers and\\nMacs. It has many filtering options and can also block ads in third party apps such as Facebook Messenger or Slack when\\nthey\'re opened in incognito mode (private browsing).\\n\\n#### iProxy\\n\\niProxy - iProxy is a free DNS proxy that can be used on its own or combined with Pi-Hole. It allows you to specify your\\nown DNS servers and customizes the Internet experience for you by blocking ads and trackers.\\n\\n## Conclusion\\n\\nSetting up a Pi-Hole is a great way to enjoy an ad-free browsing experience. It can also help to protect your privacy\\nand speed up your internet connection. In this article, we\'ve taken a look at the hardware requirements for setting up a\\nPi-Hole, followed by a step-by-step guide to setting up a Pi-Hole. We\'ve also discussed some common issues you might\\nface while setting up a Pi-Hole and how to troubleshoot them. We\'ve also discussed some optimization tips to get the\\nmost out of your Pi-Hole. Finally, we\'ve taken a look at some Pi-Hole alternatives available.\\n\\nSo, if you\'re fed up with seeing ads pop up when you\'re browsing the web, setting up a Pi-Hole is the perfect solution.\\nIt\'s easy to set up, and once it\'s running, you can enjoy an ad-free browsing experience. So, what are you waiting for?\\nGo set up your Pi-Hole now and start enjoying an ad-free internet!\\n\\n## Updating the Software\\n\\nThe other thing you need to update is the software.\\nPi-Hole is releasing updates and fixes regularly, so you need to update it.\\n\\nTo do this, the procedure is simple:\\n\\nConnect to your Raspberry Pi via SSH.\\nType this command:\\n\\n    sudo pihole -up"},{"id":"attempt-to-fix-404-error-google-search-console","metadata":{"permalink":"/app/blog/attempt-to-fix-404-error-google-search-console","source":"@site/blog/2022-12-13-attempt-to-fix-404-error-google-search-console.md","title":"Attempt To Fix 404 Error Google Search Console","description":"Based on Research Done","date":"2022-12-13T00:00:00.000Z","formattedDate":"December 13, 2022","tags":[{"label":"search-console","permalink":"/app/blog/tags/search-console"},{"label":"google","permalink":"/app/blog/tags/google"},{"label":"seo","permalink":"/app/blog/tags/seo"}],"readingTime":1.96,"hasTruncateMarker":false,"authors":[{"name":"koficodes","title":"Just a person","url":"https://koficodes.xyz","imageURL":"https://github.com/lejencodes.png","key":"koficodes"}],"frontMatter":{"slug":"attempt-to-fix-404-error-google-search-console","title":"Attempt To Fix 404 Error Google Search Console","authors":["koficodes"],"tags":["search-console","google","seo"]},"unlisted":false,"prevItem":{"title":"A Step By Step Guide To Setting Up Your Own Pi Hole And Enjoying Ad Free Browsing","permalink":"/app/blog/a-step-by-step-guide-to-setting-up-your-own-pi-hole-and-enjoying-ad-free-browsing"},"nextItem":{"title":"Python SEO Analyzer","permalink":"/app/blog/python-seo-analyzer"}},"content":"## Based on Research Done\\n\\n### Downside?\\n\\nA 404 is not necessarily an error. If you removed the pages and you didn\u2019t set up different URLs to which the server\\nshould redirect requests for those pages, then a 404 response is correct.\\n\\nNo penalty as such but indirect impact on your website is evident, when you have so much of web pages 404. 404 says the\\npage is not found but it doesn\'t say the page is deleted or permanently deleted and the visitor is not going to find it\\nagain.\\n\\nGoogle understands that. They\u2019re reporting 404 responses, not errors. You\u2019re not being hurt because your server responds\\nwith a 404 when Googlebot requests pages that you\u2019ve removed. You are potentially passing up on a benefit, however. If\\nthose pages had a decent amount of link equity, that equity would be passed on to pages to which you redirected requests\\nfor the old pages. This would also make for a better user experience. Of course, all of this is based on the assumption\\nthat you\u2019d be redirecting to pages that served to provide people looking for the old pages with the information they\\nseek.\\n\\n### Waste of Crawl Budget\\n\\nWith 404, Google waits for 2 to 3 months to ensure the page is removed. With 404, the Other impact would be that you\\nwaste your crawl budget. The crawler spends time in crawling the periods which are not present on your website. This\\nlead to trouble in discovering new pages on your website.\\n\\nWith more pages failing, Google reduces your crawl budget over time. This will reduce the timely indexing of new pages\\non your website.\\n\\n### Possible Solution?\\n\\nIt is better to issue 410 since it instructs that the page is permanently deleted. This helps Google to remove the URL\\nfrom its index quickly. The next time Googlebot visits the page and sees the 410 status code, Google will then remove\\nthe page from it\u2019s index within 24 hours. Google will never check again to see if the page has come back.\\n\\nHere are some different types of HTTP status codes:\\n\\n```shell\\n    100s: Informational requests\\n    200s: Successful requests\\n    300s: Redirects\\n    400s: Client-side errors\\n    500s: Server-side errors\\n```\\n\\nDepending on your browser, the 410 error can appear in a few different ways:\\n\\n```shell\\n    410 Gone\\n    Gone\\n    Error 410\\n    HTTP Status 410\\n```"},{"id":"python-seo-analyzer","metadata":{"permalink":"/app/blog/python-seo-analyzer","source":"@site/blog/2022-12-03-python-seo-analyzer.md","title":"Python SEO Analyzer","description":"Get started","date":"2022-12-03T00:00:00.000Z","formattedDate":"December 3, 2022","tags":[{"label":"python","permalink":"/app/blog/tags/python"},{"label":"seo","permalink":"/app/blog/tags/seo"},{"label":"seo-analyzer","permalink":"/app/blog/tags/seo-analyzer"}],"readingTime":0.465,"hasTruncateMarker":false,"authors":[{"name":"koficodes","title":"Just a person","url":"https://koficodes.xyz","imageURL":"https://github.com/lejencodes.png","key":"koficodes"}],"frontMatter":{"slug":"python-seo-analyzer","title":"Python SEO Analyzer","authors":["koficodes"],"tags":["python","seo","seo-analyzer"]},"unlisted":false,"prevItem":{"title":"Attempt To Fix 404 Error Google Search Console","permalink":"/app/blog/attempt-to-fix-404-error-google-search-console"},"nextItem":{"title":"Repo Clone with SSH","permalink":"/app/blog/repo-clone-with-ssh"}},"content":"## Get started\\n\\nRequires Python 3.6+, BeautifulSoup4 and urllib3.\\n\\n## Install by using pip\\n\\n```shell\\npip3 install pyseoanalyzer\\n```\\n\\n## Command-line Usage\\n\\nIf you run without a sitemap it will start crawling at the homepage.\\n\\n```shell\\nseoanalyze https://koficodes.xyz/\\n```\\n\\nOr you can specify the path to a sitemap to seed the urls to scan list.\\n\\n```shell\\nseoanalyze https://koficodes.xyz/ --sitemap https://koficodes.xyz/sitemap.xml\\n```\\n\\nHTML output can be generated from the analysis instead of json.\\n\\n```shell\\nseoanalyze https://koficodes.xyz/ --sitemap https://koficodes.xyz/sitemap.xml --output-format html\\n```\\n\\nRun From cloned Repository\\n\\n```shell\\npython analyzer.py https://koficodes.xyz/ -f html > results.html\\n```"},{"id":"repo-clone-with-ssh","metadata":{"permalink":"/app/blog/repo-clone-with-ssh","source":"@site/blog/2022-11-06-repo-clone-with-ssh.md","title":"Repo Clone with SSH","description":"This will save up a lot of your time trying to fix SSL Error, certification problem","date":"2022-11-06T00:00:00.000Z","formattedDate":"November 6, 2022","tags":[{"label":"repo","permalink":"/app/blog/tags/repo"},{"label":"ssh","permalink":"/app/blog/tags/ssh"}],"readingTime":1.015,"hasTruncateMarker":false,"authors":[{"name":"koficodes","title":"Just a person","url":"https://koficodes.xyz","imageURL":"https://github.com/lejencodes.png","key":"koficodes"}],"frontMatter":{"slug":"repo-clone-with-ssh","title":"Repo Clone with SSH","authors":["koficodes"],"tags":["repo","ssh"]},"unlisted":false,"prevItem":{"title":"Python SEO Analyzer","permalink":"/app/blog/python-seo-analyzer"},"nextItem":{"title":"Welcome","permalink":"/app/blog/welcome"}},"content":"This will save up a lot of your time trying to fix SSL Error, certification problem\\n\\n1. Go to your dir to check if key exist C:\\\\Users\\\\username\\\\.ssh\\n\\n```shell\\ncd %userprofile%\\\\.ssh`\\n```\\n\\n2. Use putty to gen a key and convert openssh\\n3. Open putty key generator, under key menu select generate key pair\\n4. Move your mouse to generate randomness\\n5. Put in your password, save your private key and public key\\n6. Copy pub key to Bitbucket / GitHub personal acc\\n7. Go to your profile > ssh keys\\n8. Copy from putty and paste there\\n9. Open git bash, right click on directory - select git bash) into place you wanna clone\\n10. Activate ssh agent and add your key to ssh agent, and type your ssh key password\\n\\n```shell\\neval $(ssh-agent -s)\\nssh-add ~/.ssh/id_rsa\\n```\\n\\n### Turn on the credential helper so that Git will save your password\\n\\n1. By default, Git will cache your password for 15 minutes.\\n2. In Terminal, enter the following:\\n\\n```shell\\n# Set git to use the credential memory cache\\ngit config --global credential.helper cache\\n```\\n\\n## Common Error\\n\\nFATAL ERROR: No supported authentication methods available (server sent: publickey)\\n\\n1. Open Pageant add private key"},{"id":"welcome","metadata":{"permalink":"/app/blog/welcome","source":"@site/blog/2022-10-10-welcome.md","title":"Welcome","description":"Welcome to my digital-garden / mind-garden. Always changing, continuously improve","date":"2022-10-10T00:00:00.000Z","formattedDate":"October 10, 2022","tags":[{"label":"welcome","permalink":"/app/blog/tags/welcome"},{"label":"mind-garden","permalink":"/app/blog/tags/mind-garden"},{"label":"digital-garden","permalink":"/app/blog/tags/digital-garden"}],"readingTime":0.05,"hasTruncateMarker":false,"authors":[{"name":"koficodes","title":"Just a person","url":"https://koficodes.xyz","imageURL":"https://github.com/lejencodes.png","key":"koficodes"}],"frontMatter":{"slug":"welcome","title":"Welcome","authors":["koficodes"],"tags":["welcome","mind-garden","digital-garden"]},"unlisted":false,"prevItem":{"title":"Repo Clone with SSH","permalink":"/app/blog/repo-clone-with-ssh"},"nextItem":{"title":"Ubuntu Clean Up Command","permalink":"/app/blog/ubuntu-clean-up-command"}},"content":"Welcome to my digital-garden / mind-garden. Always changing, continuously improve"},{"id":"ubuntu-clean-up-command","metadata":{"permalink":"/app/blog/ubuntu-clean-up-command","source":"@site/blog/2022-09-13-ubuntu-clean-up-command.md","title":"Ubuntu Clean Up Command","description":"1. Get rid of packages that are no longer required. If you read the apt-get commands guide, you might have come across","date":"2022-09-13T00:00:00.000Z","formattedDate":"September 13, 2022","tags":[{"label":"ubuntu","permalink":"/app/blog/tags/ubuntu"},{"label":"clean-up","permalink":"/app/blog/tags/clean-up"}],"readingTime":1.13,"hasTruncateMarker":false,"authors":[{"name":"koficodes","title":"Just a person","url":"https://koficodes.xyz","imageURL":"https://github.com/lejencodes.png","key":"koficodes"}],"frontMatter":{"slug":"ubuntu-clean-up-command","title":"Ubuntu Clean Up Command","authors":["koficodes"],"tags":["ubuntu","clean-up"]},"unlisted":false,"prevItem":{"title":"Welcome","permalink":"/app/blog/welcome"},"nextItem":{"title":"Setup Visual Studio Code in Ubuntu","permalink":"/app/blog/setup-visual-studio-code-in-ubuntu"}},"content":"1. Get rid of packages that are no longer required. If you read the apt-get commands guide, you might have come across\\n   the apt-get command option `autoremove`.\\n\\nThis option removes libs and packages that were installed automatically to satisfy the dependencies of an installed\\npackage. If that package is removed, these automatically installed packages are useless in the system.\\n\\nIt also removes old Linux kernels that were installed from automatically in the system upgrade.\\n\\nIt\u2019s a no-brainer command that you can run from time to time to make some free space on your Ubuntu system:\\n\\n```shell\\n sudo apt-get autoremove\\n```\\n\\n2. You can remove a program in Ubuntu from the software centre or using the command below with particular app name:\\n\\n```shell\\nsudo apt-get remove package-name1 package-name2\\n```\\n\\n3. Clean up APT cache in Ubuntu\\n   Ubuntu uses APT (Advanced Package Tool) for installing, removing and managing software on the system, and in doing so\\n   it keeps a cache of previously downloaded and installed packages even after they\u2019ve been uninstalled.\\n\\nYou can see the size of this cache with the du command below:\\n\\n```shell\\nsudo du -sh /var/cache/apt \\n```\\n\\nEither remove only the outdated packages, like those superseded by a recent update, making them completely unnecessary.\\n\\n```shell\\nsudo apt-get autoclean\\n```\\n\\nOr delete apt cache in its entirety (frees more disk space):\\n\\n```shell\\nsudo apt-get clean\\n```"},{"id":"setup-visual-studio-code-in-ubuntu","metadata":{"permalink":"/app/blog/setup-visual-studio-code-in-ubuntu","source":"@site/blog/2022-07-17-setup-visual-studio-code-in-ubuntu.md","title":"Setup Visual Studio Code in Ubuntu","description":"You could install Visual Studio Code using apt:","date":"2022-07-17T00:00:00.000Z","formattedDate":"July 17, 2022","tags":[{"label":"vscode","permalink":"/app/blog/tags/vscode"},{"label":"ubuntu","permalink":"/app/blog/tags/ubuntu"}],"readingTime":1.13,"hasTruncateMarker":false,"authors":[{"name":"koficodes","title":"Just a person","url":"https://koficodes.xyz","imageURL":"https://github.com/lejencodes.png","key":"koficodes"}],"frontMatter":{"slug":"setup-visual-studio-code-in-ubuntu","title":"Setup Visual Studio Code in Ubuntu","authors":["koficodes"],"tags":["vscode","ubuntu"]},"unlisted":false,"prevItem":{"title":"Ubuntu Clean Up Command","permalink":"/app/blog/ubuntu-clean-up-command"},"nextItem":{"title":"Create Python Virtual Environment","permalink":"/app/blog/create-python-virtual-environment"}},"content":"You could install Visual Studio Code using apt:\\n\\n```shell\\nwget -q https://packages.microsoft.com/keys/microsoft.asc -O- | sudo apt-key add -\\necho \\"deb [arch=amd64] https://packages.microsoft.com/repos/vscode stable main\\" | sudo tee /etc/apt/sources.list.d/vscode.list\\nsudo apt update\\nsudo apt install code\\n```\\n\\nor snap:\\n\\n```shell\\nsudo snap install code --classic\\n```\\n\\nAfter the C# package installing, the next dialog box appears:\\nClicking the marked button opens the next page, which provides the instructions for .Net Core SDK installation (along\\nwith ASP.Net Core runtime and .Net Core runtime installation instructions):\\n\\n```shell\\nwget https://packages.microsoft.com/config/ubuntu/19.10/packages-microsoft-prod.deb -O packages-microsoft-prod.deb\\nsudo apt install ./packages-microsoft-prod.deb\\nsudo apt-get update\\nsudo apt-get install apt-transport-https\\nsudo apt-get update\\nsudo apt-get install dotnet-sdk-3.1\\n```\\n\\nmonodevelop IDE seems is not an option now, because of I could not find it. But if you want to install the current mono\\nversion (For example, on 20.04, amd64 architecture) you could use official mono repository:\\n\\n```shell\\nsudo apt install gnupg ca-certificates\\nsudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF\\necho \\"deb [arch=amd64] https://download.mono-project.com/repo/ubuntu stable-focal main\\" | sudo tee /etc/apt/sources.list.d/mono-official-stable.list\\nsudo apt update\\nsudo apt install mono-devel\\n```\\n\\nYou could also install additional mono packages, which you could find by:\\n\\n```shell\\napt-cache search mono\\n```\\n\\nThe man mono will introduce you to its usage:\\n\\n```shell\\n    DESCRIPTION\\n        mono is a runtime implementation of the ECMA Common  Lan\u2010\\n        guage  Infrastructure.   This can be used to run ECMA and\\n        .NET applications.\\n```"},{"id":"create-python-virtual-environment","metadata":{"permalink":"/app/blog/create-python-virtual-environment","source":"@site/blog/2022-05-06-create-python-virtual-environment.md","title":"Create Python Virtual Environment","description":"1. Let\u2019s start by installing the python3-venv package that provides the venv module.","date":"2022-05-06T00:00:00.000Z","formattedDate":"May 6, 2022","tags":[{"label":"python","permalink":"/app/blog/tags/python"},{"label":"venv","permalink":"/app/blog/tags/venv"}],"readingTime":0.625,"hasTruncateMarker":false,"authors":[{"name":"koficodes","title":"Just a person","url":"https://koficodes.xyz","imageURL":"https://github.com/lejencodes.png","key":"koficodes"}],"frontMatter":{"slug":"create-python-virtual-environment","title":"Create Python Virtual Environment","authors":["koficodes"],"tags":["python","venv"]},"unlisted":false,"prevItem":{"title":"Setup Visual Studio Code in Ubuntu","permalink":"/app/blog/setup-visual-studio-code-in-ubuntu"},"nextItem":{"title":"Setup and Pull Upstream Changes","permalink":"/app/blog/git-setup-and-pull-upstream-changes"}},"content":"1. Let\u2019s start by installing the python3-venv package that provides the venv module.\\n\\n```shell\\nsudo apt install python3-venv\\n```\\n\\n2. Once the module is installed we are ready to create virtual environments for Python 3.\\n3. Switch to the directory where you would like to store your Python 3 virtual environments.\\n\\n```shell\\ncd /path/to/your/project\\n``` \\n\\n4. Within the directory run the following command to create your new virtual environment.\\n\\n```shell\\npython3 -m venv venv\\n```\\n\\n5. The command above creates a directory called `venv`, which contains a copy of the Python binary, the Pip package\\n   manager, the standard Python library and other supporting files.\\n6. To start using this virtual environment, you need to activate it by running the activate script.\\n\\n```shell\\nsource venv/bin/activate\\n```"},{"id":"git-setup-and-pull-upstream-changes","metadata":{"permalink":"/app/blog/git-setup-and-pull-upstream-changes","source":"@site/blog/2022-05-05-git-setup-and-pull-upstream-changes.md","title":"Setup and Pull Upstream Changes","description":"Step 1: Pull upstream changes","date":"2022-05-05T00:00:00.000Z","formattedDate":"May 5, 2022","tags":[{"label":"command","permalink":"/app/blog/tags/command"},{"label":"git","permalink":"/app/blog/tags/git"}],"readingTime":0.77,"hasTruncateMarker":false,"authors":[{"name":"koficodes","title":"Just a person","url":"https://koficodes.xyz","imageURL":"https://github.com/lejencodes.png","key":"koficodes"}],"frontMatter":{"slug":"git-setup-and-pull-upstream-changes","title":"Setup and Pull Upstream Changes","authors":["koficodes"],"tags":["command","git"]},"unlisted":false,"prevItem":{"title":"Create Python Virtual Environment","permalink":"/app/blog/create-python-virtual-environment"},"nextItem":{"title":"Top 5 Mistakes I Made as RPA Developer and Common Pitfall","permalink":"/app/blog/top-5-mistakes-i-made-as-rpa-developer-and-common-pitfall"}},"content":"## Step 1: Pull upstream changes\\n\\n`git pull --rebase upstream master`\\n\\nThe --rebase option places your changes on top of the latest commit without merges.\\n\\n## Step 2: (Optional) Merge your commits into 1 commit\\n\\n`git reset --soft upstream/master`\\n\\nThis command will \\"undo\\" all your commits, but won\'t change the files. So you can commit all your changes in a single\\ncommit.\\n\\n`git commit -a`\\n\\n## Step 3: Check & test your changes\\n\\nTo show the changes use a GUI like the built-in gitk, Sourcetree, TortoiseGit or Tower (paid), etc.\\n\\n## Step 4: Push\\n\\ngit push will throw an error, push with \\"-f\\"\\n\\n`git push -f origin master`\\n\\n## Additional information\\n\\nThe command to add a remote is:\\n\\n`git remote add upstream git://github.com/[username]/[project].git`\\n\\nYou can also also pull from a direct URL:\\n\\n`git pull --rebase git://github.com/[username]/[project].git`\\n\\nBut then you\'ll need the hash of the latest upstream commit instead of \\"upstream/master\\" in the other steps."},{"id":"top-5-mistakes-i-made-as-rpa-developer-and-common-pitfall","metadata":{"permalink":"/app/blog/top-5-mistakes-i-made-as-rpa-developer-and-common-pitfall","source":"@site/blog/2022-05-03-top-5-mistakes-i-made-as-rpa-developer-and-common-pitfall.md","title":"Top 5 Mistakes I Made as RPA Developer and Common Pitfall","description":"1. When Everything Seems too Easy","date":"2022-05-03T00:00:00.000Z","formattedDate":"May 3, 2022","tags":[{"label":"rpa","permalink":"/app/blog/tags/rpa"},{"label":"mistake","permalink":"/app/blog/tags/mistake"},{"label":"lesson-learnt","permalink":"/app/blog/tags/lesson-learnt"}],"readingTime":2.72,"hasTruncateMarker":false,"authors":[{"name":"koficodes","title":"Just a person","url":"https://koficodes.xyz","imageURL":"https://github.com/lejencodes.png","key":"koficodes"}],"frontMatter":{"slug":"top-5-mistakes-i-made-as-rpa-developer-and-common-pitfall","title":"Top 5 Mistakes I Made as RPA Developer and Common Pitfall","authors":["koficodes"],"tags":["rpa","mistake","lesson-learnt"]},"unlisted":false,"prevItem":{"title":"Setup and Pull Upstream Changes","permalink":"/app/blog/git-setup-and-pull-upstream-changes"},"nextItem":{"title":"Keep Your Free Heroku App Alive","permalink":"/app/blog/keep-your-free-heroku-app-alive"}},"content":"### 1. When Everything Seems too Easy\\n\\nMy first impression when I first hands on a RPA Tool, everything seems so easy because of the drag and drop features,\\npre-built functions, puzzle like building blocks that allow you to construct a sequence of actions just at your\\nfingertips. The creator of these tools made it so easy to implement and deploy automation, this causes a lot of\\nheadaches and technical debts down the road if we do not do our homework to have a full understanding of what we are\\ntrying to automate and what control are needed in-place.\\n\\n### 2. Rush into RPA\\n\\nDue to the hype related to RPA technologies. When we first started to adopt RPA in our company oftentimes we made a huge\\nmistake calculating ROI by just using \'Current Time Spent\' minus \'Future Time Spent\' without really think and consider\\nabout infrastructure and cost of maintenance. This often due to our team rushing to build up momentum, wanted to prove\\nthe capabilities of the tool and most importantly to get buy in from upper management. But realistically most of the\\ncurrent processes is not ready, ended up the team is spending more time maintaining the bot than the manual process.\\n\\n### 3. No everyone can do it well\\n\\nToo naive to think that everyone can use the tool that have been offered. Business user often been asked to attend RPA\\ncourse and started to automate some of their task. Unfortunately, most of these automation developed were not properly\\ntested, and assume everything is been taken care automatically. We normally started off working on the \\"Happy Path\\"\\nwithout considering the scenario that are usually more complicated than that. These could be variant of an input or the\\ninput can be in a different format that you expect. RPA can complete your job 10x faster, but also can create mistake\\n10x faster.\\n\\n### 4. Just focus on building and Robots are ready, set and forget\\n\\nFrom day one of deploying our first bot, not a single bot can be set and forget. Bot needed to be manage operationally\\nand maintained. We have made mistakes for not properly documenting and communicating automated process with business\\nSMEs. When a bot breaks, no-one will know how to recover the process and leads to unnecessary over-time to figure what\\nhad happen and what needed to be done.\\n\\nOn the other hand, due to rapidly changes in business requirements, system upgrade and process changes have causes us\\nlots of bot down-time. Getting involvement of IT and Business SMEs and knowing these changes before hand could reduce\\nunnecessary over-time trying to fire fight to get your bot up and running again.\\n\\n### 5. Failing to Scale, not building for scalability\\n\\nAfter 3 years of RPA experience. Started to feel the impact of not building for scalability. Most of our solutions were\\nbuilt in silo mode rather than enterprise-wide. We are much now spending a lot of time re-visiting our solution,\\nre-designing our bots.\\n\\nAnother mistake which was choosing the right candidate processes for RPA, we had wrong thinking about using automation\\nas a quick fix which now end up deploying multiple bots which are doing similar job while ideally they could be designed\\nas a single bot."},{"id":"keep-your-free-heroku-app-alive","metadata":{"permalink":"/app/blog/keep-your-free-heroku-app-alive","source":"@site/blog/2022-05-02-keep-your-free-heroku-app-alive/index.md","title":"Keep Your Free Heroku App Alive","description":"Thanks to Heroku, now I have my personal site :)","date":"2022-05-02T00:00:00.000Z","formattedDate":"May 2, 2022","tags":[{"label":"heroku","permalink":"/app/blog/tags/heroku"},{"label":"cronjob","permalink":"/app/blog/tags/cronjob"}],"readingTime":1.815,"hasTruncateMarker":false,"authors":[{"name":"koficodes","title":"Just a person","url":"https://koficodes.xyz","imageURL":"https://github.com/lejencodes.png","key":"koficodes"}],"frontMatter":{"slug":"keep-your-free-heroku-app-alive","title":"Keep Your Free Heroku App Alive","authors":["koficodes"],"tags":["heroku","cronjob"]},"unlisted":false,"prevItem":{"title":"Top 5 Mistakes I Made as RPA Developer and Common Pitfall","permalink":"/app/blog/top-5-mistakes-i-made-as-rpa-developer-and-common-pitfall"},"nextItem":{"title":"AWS - Block Public Access Settings in S3","permalink":"/app/blog/aws-block-public-access-settings-in-s3"}},"content":"~~Thanks to Heroku, now I have my personal site :)~~\\n\\nToo bad, heroku no longer offer free dyno..\\n\\n> If an app has a free web dyno, and that dyno receives no web traffic in a 30-minute period, it will sleep.\\n\\n> Every Heroku account is allocated a pool of free dyno hours, which can be used by Personal apps - apps that are not\\n> part of a Heroku Team or Enterprise Team.\\n\\nIf you want to know more about free dyno hours, visit official\\nsite [here](https://devcenter.heroku.com/articles/free-dyno-hours)\\n\\n# Method - Cron-job\\n\\nI am using a free tier account and I don\'t want my visitor to wait for dyno to re-launch everytime when they visit the\\nsite. This is the method I used for keeping my site alive.\\n\\n- Signup on [https://cron-job.org/en/](https://cron-job.org/en/)\\n- Once the signup is completed, verify your email.\\n- Once you log in successfully, click on the Cronjobs tab. And click on \u201cCreate cronjob\u201d.\\n\\n![cron-job](./cron-job.png)\\n\\n- Now you can fill in the details. Make sure you enter URL according to your GET method. If your GET method was for\\n  route \u201c/home,\u201d make sure your URL is [https://your-app.herokuapp.com/home](https://cron-job.org/en/).\\n\\n**If you are not verifying Heroku app with your credit card, you might want to go for user-defined schedule.**\\n\\n- When you reach the Schedule section, click on the option User-defined. Now make sure you select all the values in the\\n  columns Days of Month Days of Week, and Months.\\n- In the Hours column, select all values except for any seven. I selected all values except for 0,1,2,3,4,5,6, which\\n  means my app will be asleep from 12 a.m. to 7 a.m. (no job at 6 a.m. means the app will be asleep at 6 a.m.). This\\n  step is essential as it satisfies the restriction for the free tier.\\n- In the Minutes column, select only 0 and 30 because your app will only sleep every 30 minutes.\\n\\nThis is how your schedule settings will look in the end. Once everything looks fine, create your cron job.\\n\\nThe last picture is with the normal settings\\n\\n## User Defined Settings\\n\\n![cron-job-custom-schedule](./cron-job-custom-schedule.gif)\\n\\n## Normal Settings\\n\\n![cron-job-details](./cron-job-details.png)\\n\\nCongratulations! You have successfully kept your Heroku app alive."},{"id":"aws-block-public-access-settings-in-s3","metadata":{"permalink":"/app/blog/aws-block-public-access-settings-in-s3","source":"@site/blog/2022-05-01-aws-block-public-access-settings-in-s3.md","title":"AWS - Block Public Access Settings in S3","description":"BlockPublicAcls - This prevents any new ACLs to be created or existing ACLs being modified which enable public access to","date":"2022-05-01T00:00:00.000Z","formattedDate":"May 1, 2022","tags":[{"label":"aws","permalink":"/app/blog/tags/aws"}],"readingTime":0.555,"hasTruncateMarker":false,"authors":[{"name":"koficodes","title":"Just a person","url":"https://koficodes.xyz","imageURL":"https://github.com/lejencodes.png","key":"koficodes"}],"frontMatter":{"slug":"aws-block-public-access-settings-in-s3","title":"AWS - Block Public Access Settings in S3","authors":["koficodes"],"tags":["aws"]},"unlisted":false,"prevItem":{"title":"Keep Your Free Heroku App Alive","permalink":"/app/blog/keep-your-free-heroku-app-alive"},"nextItem":{"title":"Python Logging Output","permalink":"/app/blog/python-logging-output"}},"content":"BlockPublicAcls - This prevents any new ACLs to be created or existing ACLs being modified which enable public access to\\nthe object. With this alone existing ACLs will not be affected.\\n\\nIgnorePublicAcls - Any ACLs actions that exist with public access will be ignored, this does not prevent them being\\ncreated but prevents their effects.\\n\\nBlockPublicPolicy - This prevents a bucket policy containing public actions from being created or modified on an S3\\nbucket, the bucket itself will still allow the existing policy.\\n\\nRestrictPublicBuckets - This will prevent non AWS services or authorized users (such as an IAM user or role) from being\\nable to publicly access objects in the bucket."},{"id":"python-logging-output","metadata":{"permalink":"/app/blog/python-logging-output","source":"@site/blog/2022-04-27-python-logging-output.md","title":"Python Logging Output","description":"Complete table showing the various information that the logging system can output:","date":"2022-04-27T00:00:00.000Z","formattedDate":"April 27, 2022","tags":[{"label":"python","permalink":"/app/blog/tags/python"}],"readingTime":1.075,"hasTruncateMarker":false,"authors":[{"name":"koficodes","title":"Just a person","url":"https://koficodes.xyz","imageURL":"https://github.com/lejencodes.png","key":"koficodes"}],"frontMatter":{"slug":"python-logging-output","title":"Python Logging Output","authors":["koficodes"],"tags":["python"]},"unlisted":false,"prevItem":{"title":"AWS - Block Public Access Settings in S3","permalink":"/app/blog/aws-block-public-access-settings-in-s3"},"nextItem":{"title":"Coffee Grounds","permalink":"/app/blog/coffee-grounds"}},"content":"Complete table showing the various information that the logging system can output:\\n\\n| %(name)s            | Logger\'s name                                                                                                                  |\\n| ------------------- | ------------------------------------------------------------------------------------------------------------------------------ |\\n| %(levelno)s         | Log level in digital form                                                                                                      |\\n| %(levelname)s       | Log level in text form                                                                                                         |\\n| %(pathname)s        | The full path name of the module that called the log output function, may not have                                             |\\n| %(filename)s        | The file name of the module that called the log output function                                                                |\\n| %(module)s          | Call the module name of the log output function                                                                                |\\n| %(funcName)s        | Call the function name of the log output function                                                                              |\\n| %(lineno)d          | The line of code where the statement that called the log output function is located                                            |\\n| %(created)f         | Current time, expressed in floating point numbers representing the time of the UNIX standard                                   |\\n| %(relativeCreated)d | The number of milliseconds since the Logger was created when the log information was output.                                   |\\n| %(asctime)s         | The current time in the form of a string. The default format is \\"2003-07-08 16:49:45,896\\". Behind the comma is the millisecond |\\n| %(thread)d          | Thread ID. Maybe not                                                                                                           |\\n| %(threadName)s      | Thread name. Maybe not                                                                                                         |\\n| %(process)d         | Process ID. Maybe not                                                                                                          |\\n| %(message)s         | User output message                                                                                                            |"},{"id":"coffee-grounds","metadata":{"permalink":"/app/blog/coffee-grounds","source":"@site/blog/2022-04-26-coffee-grounds.md","title":"Coffee Grounds","description":"Interesting thoughts this morning when I am brewing my cup of coffee. When dumping my coffee grounds to the bin and I am","date":"2022-04-26T00:00:00.000Z","formattedDate":"April 26, 2022","tags":[{"label":"coffee","permalink":"/app/blog/tags/coffee"},{"label":"life","permalink":"/app/blog/tags/life"}],"readingTime":2.675,"hasTruncateMarker":false,"authors":[{"name":"koficodes","title":"Just a person","url":"https://koficodes.xyz","imageURL":"https://github.com/lejencodes.png","key":"koficodes"}],"frontMatter":{"slug":"coffee-grounds","title":"Coffee Grounds","authors":["koficodes"],"tags":["coffee","life"]},"unlisted":false,"prevItem":{"title":"Python Logging Output","permalink":"/app/blog/python-logging-output"},"nextItem":{"title":"Do you vape?","permalink":"/app/blog/do-you-vape"}},"content":"Interesting thoughts this morning when I am brewing my cup of coffee. When dumping my coffee grounds to the bin and I am\\nthinking how much of coffee waste do we produce per as a coffee drinker.\\n\\n## How Much Coffee Waste Do We Produce?\\n\\nAccording to the SCA, the \u201cgolden ratio\u201d for brewing coffee is 55g per litre. This works out at just under 14g for a\\n250ml cup. While this might seem individually insignificant, billions of cups of coffee are consumed every single day.\\n\\n## Waste in Coffee Production\\n\\nSo why is coffee production so bad for the environment? The decomposition of coffee waste in landfills generates\\ngreenhouse gases and whenever these are dumped into landfills, they create methane which are more harmful than carbon\\ndioxide\\n\\n## Reusing Coffee Grounds At Home\\n\\nAs what I have been doing, majority of used coffee is often thrown to the bin without being separated or treated. I did\\nsome googling and found some good ways of reusing coffee ground at home\\n\\n- Coffee grounds make great fertilizer because they contain several key nutrients required for plant growth. They can\\n  also help attract worms and decrease the concentrations of heavy metals in the soil.\\n\\n- Adding compost to your garden can significantly improve the health of your plants. Coffee grounds can help increase\\n  nutrient levels and decrease the greenhouse gas emissions of your compost.\\n\\n- Like other insects, fleas do not like coffee. Bathing your pet in used coffee grounds may help keep fleas at bay.\\n\\n- Coffee grounds can help absorb and eliminate odors from your refrigerator, gym bag or smelly shoes. Using them as a\\n  hand scrub can also help remove lingering smells from onion or garlic.\\n\\n- Coffee grounds can be used as an abrasive cleaner. They can help sanitize and remove buildup from sinks, cookware,\\n  grills and other surfaces around the house.\\n\\n- Coffee grounds can be repurposed into an exfoliating scrub for your face and body. They help remove dirt and dead skin\\n  cells and promote overall skin health.\\n\\n- Coffee grounds contain compounds that are toxic to many insects. You can use your coffee grounds to repel mosquitos,\\n  fruit flies, beetles and other pests.\\n\\n- Coffee grounds may help reduce the appearance of cellulite by breaking down fat deposits and increasing blood flow to\\n  the affected area.\\n\\n- Use coffee grounds to weigh down the ashes in your fireplace before cleaning. This makes for easier ash removal and\\n  less mess.\\n\\n- Coffee grounds can be repurposed into an exfoliating scrub for your face and body. They help remove dirt and dead skin\\n  cells and promote overall skin health.\\n\\n- Coffee grounds contain natural acids and enzymes that help tenderize meat and enhance its flavor.\\n\\n- You can use coffee grounds to buff out scratches on wooden furniture and darken them to match your existing finish.\\n\\n- Coffee grounds contain caffeine and antioxidants. When applied to the skin, they can help prevent aging and reduce the\\n  appearance of dark under-eye circles and puffiness.\\n\\n- Coffee grounds contain compounds that can raise blood cholesterol. Consuming small amounts on occasion is fine for\\n  most people, but they may be problematic if consumed in excess."},{"id":"do-you-vape","metadata":{"permalink":"/app/blog/do-you-vape","source":"@site/blog/2022-04-25-do-you-vape/index.md","title":"Do you vape?","description":"Vaper since Year 2015. Can\'t remember the hype of vaping few years back.","date":"2022-04-25T00:00:00.000Z","formattedDate":"April 25, 2022","tags":[{"label":"vape","permalink":"/app/blog/tags/vape"},{"label":"life","permalink":"/app/blog/tags/life"}],"readingTime":0.97,"hasTruncateMarker":false,"authors":[{"name":"koficodes","title":"Just a person","url":"https://koficodes.xyz","imageURL":"https://github.com/lejencodes.png","key":"koficodes"}],"frontMatter":{"slug":"do-you-vape","title":"Do you vape?","authors":["koficodes"],"tags":["vape","life"]},"unlisted":false,"prevItem":{"title":"Coffee Grounds","permalink":"/app/blog/coffee-grounds"},"nextItem":{"title":"Bake a cheesecake?","permalink":"/app/blog/bake-a-cheesecake"}},"content":"Vaper since Year 2015. Can\'t remember the hype of vaping few years back.\\nBeen using various kind of mods, box-mods, squonk mods. So far, the only still surviving is my Taifun - Scarab (\\nSkarab\xe4us) when I first bought in Paris. Together my favourite Pico RTA.\\nCould be I am tired of chasing for the latest stuff out there, just like how we are chasing for gadgets and shit.\\nSticking with the same old mod and same old RTA.\\n\\n## Taifun - Scarab (Skarab\xe4us)\\n\\n    The Taifun Skarab\xe4us Pro is characterized by its relatively simple operation, which excludes the usual disadvantages of a mechanical switches such as arcing, carbon build up, and performance degradation over time. The benefit of the switch design in the Skarab\xe4us Pro results in fast and instant power ramp up for strong hits and consistent performance over time.\\n\\n![Taifun - Scarab](./taifun-skarabaeus.jpg)\\n\\n## Pico RTA\\n\\n    The Pico RTA by YellowKiss (The Vape) The Pico by YellowKiss (The Vape) in Korea, is an exclusive rebuildable tank atomizer that is designed for some of the most incredible flavour reproduction available from any tank on the market today, packaged in an incredibly small size!\\n\\n![pico](./picorta.resized.jpg)"},{"id":"bake-a-cheesecake","metadata":{"permalink":"/app/blog/bake-a-cheesecake","source":"@site/blog/2022-04-24-bake-a-cheesecake.md","title":"Bake a cheesecake?","description":"Recently I have been looking for something new to try on. How about baking a cake?","date":"2022-04-24T00:00:00.000Z","formattedDate":"April 24, 2022","tags":[{"label":"baking","permalink":"/app/blog/tags/baking"},{"label":"life","permalink":"/app/blog/tags/life"}],"readingTime":0.505,"hasTruncateMarker":false,"authors":[{"name":"koficodes","title":"Just a person","url":"https://koficodes.xyz","imageURL":"https://github.com/lejencodes.png","key":"koficodes"}],"frontMatter":{"slug":"bake-a-cheesecake","title":"Bake a cheesecake?","authors":["koficodes"],"tags":["baking","life"]},"unlisted":false,"prevItem":{"title":"Do you vape?","permalink":"/app/blog/do-you-vape"},"nextItem":{"title":"Method of RPA Bots Deployment","permalink":"/app/blog/method-of-rpa-bots-deployment"}},"content":"Recently I have been looking for something new to try on. How about baking a cake?\\nSince the cake I like the most is cheesecake, google up and found this in Youtube. Gathered all the ingredient and\\nbaking utensils, honestly it\'s really not hard to make a cheesecake. I would suggest to give a try!\\nUpdates: I have been messing around with the same recipe, just giving a try on switching out the brands of cream cheese,\\npercentages of sour cream and I am having fun!\\n\\n[![The Best New York Cheesecake Recipe | Emojoie Cuisine](https://img.youtube.com/vi/tspdJ6hxqnc/0.jpg)](https://www.youtube.com/watch?v=tspdJ6hxqnc \\"The Best New York Cheesecake Recipe\\")"},{"id":"method-of-rpa-bots-deployment","metadata":{"permalink":"/app/blog/method-of-rpa-bots-deployment","source":"@site/blog/2022-04-13-method-of-rpa-bots-deployment.md","title":"Method of RPA Bots Deployment","description":"Not long ago, I have been introduced with Python.","date":"2022-04-13T00:00:00.000Z","formattedDate":"April 13, 2022","tags":[{"label":"rpa","permalink":"/app/blog/tags/rpa"},{"label":"deployment","permalink":"/app/blog/tags/deployment"}],"readingTime":0.7,"hasTruncateMarker":false,"authors":[{"name":"koficodes","title":"Just a person","url":"https://koficodes.xyz","imageURL":"https://github.com/lejencodes.png","key":"koficodes"}],"frontMatter":{"slug":"method-of-rpa-bots-deployment","title":"Method of RPA Bots Deployment","authors":["koficodes"],"tags":["rpa","deployment"]},"unlisted":false,"prevItem":{"title":"Bake a cheesecake?","permalink":"/app/blog/bake-a-cheesecake"},"nextItem":{"title":"Top 10 Design Principles","permalink":"/app/blog/top-10-design-principles"}},"content":"Not long ago, I have been introduced with Python.\\n\\nPython language was not hard to understand but is kinda hard to write good codes with Python especially for a person\\nlike me who do not have good IT knowledge.\\n\\nBut thanks to the Internet, there are plenty of resources online that helped me in better understand the programming\\nlanguage.\\n\\nAs my job are more towards on process automation, what we need was a scheduler that enable us to make a schedule /\\ntrigger that\'s calls out routine to complete business task.\\n\\nI am using Flask to fire up a python server, once the server is ready in local-host to receive request. Then, request\\ncan be submitted through REST method which can direct our flask app.route to call out python method and function that\\nhas been coded to do the job."},{"id":"top-10-design-principles","metadata":{"permalink":"/app/blog/top-10-design-principles","source":"@site/blog/2022-04-12-top-10-design-principles.md","title":"Top 10 Design Principles","description":"What I learned and understand so far...","date":"2022-04-12T00:00:00.000Z","formattedDate":"April 12, 2022","tags":[{"label":"design-principles","permalink":"/app/blog/tags/design-principles"}],"readingTime":3.445,"hasTruncateMarker":false,"authors":[{"name":"koficodes","title":"Just a person","url":"https://koficodes.xyz","imageURL":"https://github.com/lejencodes.png","key":"koficodes"}],"frontMatter":{"slug":"top-10-design-principles","title":"Top 10 Design Principles","authors":["koficodes"],"tags":["design-principles"]},"unlisted":false,"prevItem":{"title":"Method of RPA Bots Deployment","permalink":"/app/blog/method-of-rpa-bots-deployment"},"nextItem":{"title":"Python Refactoring","permalink":"/app/blog/python-refactoring"}},"content":"What I learned and understand so far...\\n\\n## 1. Divide and Conquer\\n\\nThis stay on the top as it\'s the most important principle, for instances when we are being provided with a business case\\nwith huge list of requirements, we started to confuse ourselves and often the solution came up straight away potentially\\nnot the best solution. The idea of divide is to decompose a given problem into two or more similar, sub-problems, which\\nthen we conquer by composing solutions to the give problem.\\n\\n## 2. Increase cohesion\\n\\nA good object oriented design must be loosely coupled and highly cohesive. This design principle have been created based\\non the idea of `Loose coupling and high cohesion`. Don\'t mixed up with Cohesion and Coupling, as cohesion refers to what\\na class, module or function can do. Low cohesion would means that it does great variety of action being unfocused on\\nwhat it should do. Another way to think of this is to have something that could not be broken down further, and should\\nbe doing only one thing.\\n\\n**Example of Low Cohesion:**\\n\\n| Staff            |\\n| ---------------- |\\n| check_email()    |\\n| send_email()     |\\n| email_validate() |\\n| get_salary()     |\\n\\n**Example of High Cohesion:**\\n\\n| Staff         |\\n| ------------- |\\n| -salary       |\\n| -email_add    |\\n|               |\\n| set_salary()  |\\n| get_salary()  |\\n| set_email_add |\\n| get_email_add |\\n\\n## 3. Reduce coupling\\n\\nThis refers to how related or dependent of two classes / modules. Low coupled would mean that changing something in\\nmajor should not affect the other. High coupling would increase the difficulties of code maintenance, a change of module\\nusually forces a ripple effect of changes in other modules. The lesser dependencies the better\\n\\n## 4. Increase abstract\\n\\nAbstraction is one of the key principles behind many of the OO design principles such as below and is the hardest in my\\nopinion. The idea is to have a simplified version of something technical and the goal is to reduce complexity.\\n\\n- Inheritance\\n- Polymorphism\\n- Composition\\n- Benefits of abstraction\\n- Code is easy to understand\\n- Manages change and the effect of change\\n- Creates cohesive code \u2013 it finds common fields\\n- Create loose coupling\\n\\n[https://en.wikipedia.org/wiki/Code_Complete](https://en.wikipedia.org/wiki/Code_Complete)\\n\\n> abstraction is the ability to view a complex operation in a simplified form. A class interface provides an abstraction\\n> of the implementation that\u2019s hidden behind the interface\\n\\nSome examples below:\\n\\n**Concrete**\\n\\n    place_triangle(triangle)\\n    place_square(square)\\n    place_circle(circle)\\n\\n**Abstract**\\n\\n    place_shape(shape)\\n\\nYou will just lock down the attributes like x, y, areas\\n\\n## 5. Increase re-usability\\n\\nThink of writing codes as re-usable as possible, the challenge part could be keeping the balance on spending more time\\nto design and write a general function. I see this as a investment of time to reduce the future time needed to go back\\nand understand the piece of code.\\n\\n## 6. Design for flexibility\\n\\nThink ahead and anticipate that the fact of there will be a change in the future, as and when the business grows,\\nrequirement changes and more. A-lot of time when comes to an end of project, I realised that I have to add some features\\nand based on the way I have written my codes, that\'s not possible. Ending up spending more time to re-write and\\nre-design the whole program.\\n\\n## 7. Anticipate Obsolescence\\n\\n- Avoid early release and version of software\\n- Use software from reputable companies\\n- Use as few external dependencies as possible\\n- Avoid poorly documented or maintained projects\\n\\n## 8. Design for portability / scalability\\n\\nThink ahead about possibility to have your program in other platform. Things can get harder when your client based grows\\nand you do not have the ability to scale your program or port to another platform.\\n\\n## 9. Design for testability\\n\\nThis is important especially for larger code based project. Design the code in a way that you are able to test the code.\\nThink of test case, functional test, unit test, and find out a way to test the code.\\n\\n## 10. Design defensively\\n\\nIdiot proof your code. Good error messages, handling all the invalid input, handling wrong output."},{"id":"python-refactoring","metadata":{"permalink":"/app/blog/python-refactoring","source":"@site/blog/2022-04-11-python-refactoring.md","title":"Python Refactoring","description":"Trying to understand what is refactoring, follow the guide from Real Python. https://realpython.com/python-refactoring","date":"2022-04-11T00:00:00.000Z","formattedDate":"April 11, 2022","tags":[{"label":"python","permalink":"/app/blog/tags/python"},{"label":"refactoring","permalink":"/app/blog/tags/refactoring"}],"readingTime":3.7,"hasTruncateMarker":false,"authors":[{"name":"koficodes","title":"Just a person","url":"https://koficodes.xyz","imageURL":"https://github.com/lejencodes.png","key":"koficodes"}],"frontMatter":{"slug":"python-refactoring","title":"Python Refactoring","authors":["koficodes"],"tags":["python","refactoring"]},"unlisted":false,"prevItem":{"title":"Top 10 Design Principles","permalink":"/app/blog/top-10-design-principles"},"nextItem":{"title":"Using ssh-agent with Visual Studio Code on Windows 10","permalink":"/app/blog/using-ssh-agent-with-visual-studio-code-on-windows-10"}},"content":"Trying to understand what is refactoring, follow the guide from Real Python. https://realpython.com/python-refactoring\\n\\n## 1. Functions That Should Be Objects\\n\\nWithout reading the code, you will not know if it will modify the original image or create a new image.\\n\\n```py title=\\"imagelib.py\\"\\ndef load_image(path):\\n    with open(path, \\"rb\\") as file:\\n        fb = file.load()\\n    image = img_lib.parse(fb)\\n    return image\\n\\n\\ndef crop_image(image, width, height):\\n    ...\\n    return image\\n\\n\\ndef get_image_thumbnail(image, resolution=100):\\n    ...\\n    return image\\n```\\n\\nTo call the codes:\\n\\n```py\\nfrom imagelib import load_image, crop_image, get_image_thumbnail\\n\\nimage = load_image(\'~/face.jpg\')\\nimage = crop_image(image, 400, 500)\\nthumb = get_image_thumbnail(image)\\n```\\n\\nSymptoms of code using functions that could be refactored into classes:\\n\\n    Similar arguments across functions\\n    Higher number of Halstead h2 unique operands (All the variables and constants are considered operands)\\n    Mix of mutable and immutable functions\\n    Functions spread across multiple Python files\\n\\nHere is a refactored version of those 3 functions, where the following happens:\\n\\n    .__init__() replaces load_image().\\n    crop() becomes a class method.\\n    get_image_thumbnail() becomes a property.\\n\\nThe thumbnail resolution has become a class property, so it can be changed globally or on that particular instance:\\n\\n```py title=\\"imagelib-refactored.py\\"\\nclass Image(object):\\n    thumbnail_resolution = 100\\n\\n    def __init__(self, path):\\n        ...\\n\\n    def crop(self, width, height):\\n        ...\\n\\n    @property\\n    def thumbnail(self):\\n        ...\\n        return thumb\\n\\n```\\n\\nThis is how the refactored example would look:\\n\\n```py\\nfrom imagelib import Image\\n\\nimage = Image(\'~/face.jpg\')\\nimage.crop(400, 500)\\nthumb = image.thumbnail\\n```\\n\\nIn the resulting code, we have solved the original problems:\\n\\n    It is clear that thumbnail returns a thumbnail since it is a property, and that it doesn\u2019t modify the instance.\\n    The code no longer requires creating new variables for the crop operation.\\n\\n## 2. Objects That Should Be Functions\\n\\nHere are some tell-tale signs of incorrect use of classes:\\n\\n    Classes with 1 method (other than .__init__())\\n    Classes that contain only static methods\\n\\n```py title=\\"authentication class\\"\\nclass Authenticator(object):\\n    def __init__(self, username, password):\\n        self.username = username\\n        self.password = password\\n\\n\\ndef authenticate(self):\\n    # Do something\\n    return result\\n```\\n\\nIt would make more sense to just have a simple function named authenticate() that takes username and password as\\narguments:\\n\\n```py title=\\"authenticate.py\\"\\ndef authenticate(username, password):\\n    # Do something\\n    return result\\n```\\n\\n## 3. Converting \u201cTriangular\u201d Code to Flat Code\\n\\nThese are the symptoms of highly nested code:\\n\\n    A high cyclomatic complexity because of the number of code branches\\n    A low Maintainability Index because of the high cyclomatic complexity relative to the number of lines of code\\n\\n```py\\ndef contains_errors(data):\\n    if isinstance(data, list):\\n        for item in data:\\n            if isinstance(item, str):\\n                if item == \\"error\\":\\n                    return True\\n    return False\\n```\\n\\nRefactor this function by \u201creturning early\u201d\\n\\n```py\\ndef contains_errors(data):\\n    if not isinstance(data, list):\\n        return False\\n    return data.count(\\"error\\") > 0\\n```\\n\\nAnother technique to reduce nesting by list comprehension\\n\\nCommon practise to create list, loop through and check for criteria.\\n\\n```py\\nresults = []\\nfor item in iterable:\\n    if item == match:\\n        results.append(item)\\n```\\n\\nReplace with:\\n\\n    results = [item for item in iterable if item == match]\\n\\n## 4. Handling Complex Dictionaries With Query Tools\\n\\nIt does have one major side-effect: when dictionaries are highly nested, the code that queries them becomes nested too.\\n\\n```json\\ndata = {\\n  \\"network\\": {\\n    \\"lines\\": [\\n      {\\n        \\"name.en\\": \\"Ginza\\",\\n        \\"name.jp\\": \\"\u9280\u5ea7\u7dda\\",\\n        \\"color\\": \\"orange\\",\\n        \\"number\\": 3,\\n        \\"sign\\": \\"G\\"\\n      },\\n      {\\n        \\"name.en\\": \\"Marunouchi\\",\\n        \\"name.jp\\": \\"\u4e38\u30ce\u5185\u7dda\\",\\n        \\"color\\": \\"red\\",\\n        \\"number\\": 4,\\n        \\"sign\\": \\"M\\"\\n      }\\n    ]\\n  }\\n}\\n```\\n\\nIf you wanted to get the line that matched a certain number, this could be achieved in a small function:\\n\\n```py\\ndef find_line_by_number(data, number):\\n    matches = [line for line in data if line[\'number\'] == number]\\n    if len(matches) > 0:\\n        return matches[0]\\n    else:\\n        raise ValueError(f\\"Line {number} does not exist.\\")\\n```\\n\\n    find_line_by_number(data[\\"network\\"][\\"lines\\"], 3)\\n\\nThere are third party tools for querying dictionaries in Python. Some of the most popular are JMESPath, glom, asq, and\\nflupy.\\n\\n```py\\n\\nimport jmespath\\n\\njmespath.search(\\"network.lines\\", data)\\n[{\'name.en\': \'Ginza\', \'name.jp\': \'\u9280\u5ea7\u7dda\',\\n  \'color\': \'orange\', \'number\': 3, \'sign\': \'G\'},\\n {\'name.en\': \'Marunouchi\', \'name.jp\': \'\u4e38\u30ce\u5185\u7dda\',\\n  \'color\': \'red\', \'number\': 4, \'sign\': \'M\'}]\\n```\\n\\nIf you wanted to get the line number for every line, you could do this:\\n\\n    > > > jmespath.search(\\"network.lines[*].number\\", data)\\n    > > > [3, 4]\\n\\nYou can provide more complex queries, like a `==`or `<`. The syntax is a little unusual for Python developers, so keep\\nthe\\ndocumentation handy for reference.\\n\\nFind the line with the number 3\\n\\n```shell\\n    > > > jmespath.search(\\"network.lines[?number==`3`]\\", data)\\n    > > > [{\'name.en\': \'Ginza\', \'name.jp\': \'\u9280\u5ea7\u7dda\', \'color\': \'orange\', \'number\': 3, \'sign\': \'G\'}]\\n```"},{"id":"using-ssh-agent-with-visual-studio-code-on-windows-10","metadata":{"permalink":"/app/blog/using-ssh-agent-with-visual-studio-code-on-windows-10","source":"@site/blog/2022-04-10-using-ssh-agent-with-visual-studio-code-on-windows-10.md","title":"Using ssh-agent with Visual Studio Code on Windows 10","description":"Enable the ssh-agent service","date":"2022-04-10T00:00:00.000Z","formattedDate":"April 10, 2022","tags":[{"label":"ssh-agent","permalink":"/app/blog/tags/ssh-agent"},{"label":"ssh","permalink":"/app/blog/tags/ssh"},{"label":"ssh-key","permalink":"/app/blog/tags/ssh-key"},{"label":"vscode","permalink":"/app/blog/tags/vscode"},{"label":"windows","permalink":"/app/blog/tags/windows"}],"readingTime":7.745,"hasTruncateMarker":false,"authors":[{"name":"koficodes","title":"Just a person","url":"https://koficodes.xyz","imageURL":"https://github.com/lejencodes.png","key":"koficodes"}],"frontMatter":{"slug":"using-ssh-agent-with-visual-studio-code-on-windows-10","title":"Using ssh-agent with Visual Studio Code on Windows 10","authors":["koficodes"],"tags":["ssh-agent","ssh","ssh-key","vscode","windows"]},"unlisted":false,"prevItem":{"title":"Python Refactoring","permalink":"/app/blog/python-refactoring"},"nextItem":{"title":"Make another branch as master","permalink":"/app/blog/make-another-branch-as-master"}},"content":"### Enable the ssh-agent service\\n\\nTo enable SSH Agent automatically on Windows, start PowerShell as an Administrator and run the following commands:\\n\\n```\\n# Make sure you\'re running as an Administrator\\nSet-Service ssh-agent -StartupType Automatic\\nStart-Service ssh-agent\\nGet-Service ssh-agent\\n```\\n\\n### Adding ssh keys\\n\\nRun these commands in a terminal window within Visual Studio Code.\\n\\nShow keys managed by the ssh-agent\\n\\n```\\nssh-add -l\\n```\\n\\n### Add a ssh key\\n\\n```\\nssh-add\\n```\\n\\nFor git, add a system environment variable or use a temporary setting in a PowerShell terminal of VSCode.\\n\\n$env:GIT_SSH=\\"C:\\\\Windows\\\\System32\\\\OpenSSH\\\\ssh.exe\\"\\n\\nIf you add the line `$env:GIT_SSH=\\"C:\\\\Windows\\\\System32\\\\OpenSSH\\\\ssh.exe\\"` to your Powershell profile the environment\\nvariable will always be used.\\n\\nhttps://www.cgranade.com/blog/2016/06/06/ssh-keys-in-vscode.html\\n\\n# Using SSH Keys in Visual Studio Code on Windows\\n\\n[Visual Studio Code](https://code.visualstudio.com/) is\\nMicrosoft\u2019s [open-source](https://github.com/Microsoft/vscode/blob/master/LICENSE.txt) code editor for Windows, OS X and\\nLinux. Nicely, VS Code has built-in support for Git and support for Python\\nthrough [an extension](https://marketplace.visualstudio.com/items?itemName=donjayamanne.python), making it a useful for\\nscientific development. Using VS Code on Windows is somewhat frustrated, however, if you want to work with a Git\\nrepository that was cloned using SSH. Thankfully, I found a workable solution using PuTTY and Git for Windows, such that\\nVS Code transparently works with password-protected SSH keys. Below, I detailed how I got it working in as complete a\\ndetail as reasonable, but you may have already done some or even many of these steps. If so, the procedure is actually\\nfairly simple, and consists of pointing Git (and hence VS Code) to use PuTTY and Pageant instead of the SSH version that\\nships with Git for Windows.\\n\\nFirst, though, a disclaimer. These steps worked on my Windows 10 installation, but may not work on yours. If you find\\nthat this is the case, let me know, and I\u2019ll try and update accordingly.\\n\\n## Step 0. Install Required Software\\n\\nBefore we get into things, we\u2019ll need a bit of software. In particular, we\u2019ll need:\\n\\n- [PuTTY](http://www.chiark.greenend.org.uk/~sgtatham/putty/) as a native-Windows SSH client and agent,\\n- [Git for Windows](https://git-scm.com/download/win) to use Git from PowerShell and VS Code, and\\n- [OpenSSH for Windows](https://github.com/PowerShell/Win32-OpenSSH) to generate SSH keys in the first place.\\n\\n:::tip\\nDo not install PuTTY from its official homepage, as this will download PuTTY over an insecure\\nconnection. This guide will cover how to download PuTTY securely.\\n:::tip\\n\\nFor much of this, we can use the [Chocolatey package manager](https://chocolatey.org/) for Windows to save some grief,\\nso\\nlet\u2019s start by installing that. If you already have Chocolatey, please skip this step. (If you aren\u2019t sure, try\\nrunning `choco` from PowerShell.) Run PowerShell as administrator, then run the following command to download and\\ninstall\\nChocolatey:\\n\\n```shell\\nPS> Set-ExecutionPolicy -Scope Process RemoteSigned\\nPS> iwr https://chocolatey.org/install.ps1 -UseBasicParsing | iex\\n```\\n\\nOnce this is done, close and reopen PowerShell (again as administrator). This will make `choco` available as a command.\\nNow we can use it to install Git and OpenSSH (as above, we will *not* install PuTTY using Chocolatey, as it will\\ndownload\\nPuTTY from its official homepage using an insecure connection). Run the following PowerShell commands to install Git and\\nOpenSSH:\\n\\n```shell\\nPS> choco install git\\nPS> choco install win32-openssh\\n```\\n\\nWe\u2019ll finish up by downloading the version of PuTTY that ships with [WinSCP](https://winscp.net/), since that version is\\ndelivered via HTTPS and not insecure HTTP. In particular,\\nuse [this link](https://winscp.net/download/putty-0.67-installer.exe) to download PuTTY, then run the installer once\\nyou\u2019ve downloaded it.\\n\\n## Step 1. Setup Private Keys\\n\\nOnce everything is installed, we now need to make sure that you have an SSH private key and that this key is registered\\nwith your Git hosting service (for instance, GitHub or Bitbucket). If you already have keys and have registered them\\nwith your hosting provider, please skip on ahead.\\n\\nIn any case, to generate keys, we\u2019ll again use PowerShell:\\n\\n```shell\\nssh-keygen\\n```\\n\\nSimply follow the prompts to make yourself a new public/private key pair, making sure to choose a long (~40 character)\\npassphrase. This passphrase provides much of the entropy for your key, such that it should be much longer than a typical\\npassword. **Never** type your passphrase into a remote password prompt\u2014 the passphrase is used to unlock your key\\nlocally\\non your machine, and should **never** be sent over the network. If a website asks you for your SSH passphrase, you are\\nprobably being scammed.\\n\\nBy default, the new keys will be located in `C:\\\\Users\\\\<username>\\\\.ssh\\\\id_rsa`and`C:\\\\Users\\\\<username>\\\\.ssh\\\\id_rsa.pub`.\\nAs\\nthe names suggest, the first of these is the*private*key and should not be shared with anyone. The other is the public\\nkey, and serves to identify yourself to others. Follow the instructions\\nfor [GitHub](https://help.github.com/articles/adding-a-new-ssh-key-to-your-github-account/)\\nor [Bitbucket](https://confluence.atlassian.com/bitbucket/add-an-ssh-key-to-an-account-302811853.html) (for Bitbucket,\\nmake sure to follow the Linux and OS X instructions, even from Windows) to upload your*public*key to your hosting\\nprovider.\\n\\n## Step 2. Set up SSH Agent\\n\\nNext, we\u2019ll make sure that your private key is setup in an SSH agent. This will securely remember your passphrase within\\na given session, so that you don\u2019t have to type it in every time you use it. In particular, we\u2019ll configure Pageant,\\nsince this is installed with PuTTY, and works well with a variety of command-line and GUI tools for Windows\u2014 most\\nnotably, with VS Code.\\n\\nPageant must be run at startup in order to be useful, so we\u2019ll begin by adding it to the startup folder now. In Windows\\nExplorer (Windows 8.1 and earlier) or in File Explorer (Windows 10 and later), go to the\\nfolder `C:\\\\Users\\\\<username>\\\\AppData\\\\Roaming\\\\Microsoft\\\\Windows\\\\Start Menu\\\\Programs\\\\Startup`. Right-click inside this\\nfolder and select `New \u2192 Shortcut`. From there, browse to `C:\\\\Program Files (x86)\\\\PuTTY` and select `pageant.exe`.\\n\\nNext, we need to import your new key into PuTTY/Pageant.\\n\\n1. Run PuTTYgen from the Start Menu and select `File \u2192 Load Key...`.\\n1. From there, navigate to `C:\\\\Users\\\\<username>\\\\.ssh\\\\` and select `id_rsa` (the private key). You may have to drop down\\n   the\\n   file types selector in the dialog box to see this, as PuTTYgen defaults to filtering out everything but files ending\\n   in `*.ppk`. Once selected, you\u2019ll be prompted by PuTTY to unlock your key by typing in your passphrase. Do so, and\\n   PuTTYgen will show the corresponding public key.\\n1. Select `File \u2192 Save private key` to export your private key in PuTTY, rather than OpenSSH, format. I suggest saving\\n   it\\n   as `id_rsa.ppk` in the same folder as `id_rsa`, but this is up to you. Just be sure that to save it in a folder that\\n   only you can read, and that is not synchronized using Dropbox, OneDrive, Google Drive or similar.\\n\\nFinally, run Pageant from the Start Menu (in the future, this will be handled automatically by the shortcut we created\\nabove). This will add a new icon to your system tray. It may be hidden by the arrow; if so, click the arrow to make all\\nfo the system tray icons visible. Right-click on Pageant and select `Add Key`. Browse to where you saved `id_rsa.ppk`\\nand\\nselect it. You\u2019ll be prompted to unlock your key. Upon doing so, your unlocked key will then be made available in\\nPageant until you log out or quit Pageant.\\n\\n## Step 3. Add SSH Server Fingerprints\\n\\nDespite the name, this is a short step. Whenever you log into an SSH server, PuTTY will check that the server\u2019s *\\nfingerprint* is correct. This is a short cryptographic string identifying that server, such that checking the\\nfingerprint\\nhelps against man-in-the-middle attacks. If you haven\u2019t logged into a server with PuTTY before, however, it has no idea\\nhow to check the fingerprint, and will fail to login. Since VS Code ignores these errors, Git support will silently fail\\nunless you first attempt to log into the SSH server offered by your Git host. To do so, we\u2019ll use PowerShell one last\\ntime. Run one of the following commands below, depending on which hosting provider you use.\\n\\n```\\nPS > & \'C:\\\\Program Files (x86)\\\\PuTTY\\\\plink.exe\' git@github.com\\nPS > & \'C:\\\\Program Files (x86)\\\\PuTTY\\\\plink.exe\' git@bitbucket.org\\n```\\n\\nIn either case, you\u2019ll be prompted to add the server\u2019s fingerprint to the registry. If you are confident that your\\ntraffic is not being intercepted, select`y`at this prompt. Neither GitHub nor Bitbucket actually allows logins via SSH,\\nso you\u2019ll get an error, but this is OK: you\u2019ve gotten far enough to see the server\u2019s fingerprint, and that\u2019s all we\\nneeded. To check, you can run the commands above again, and note that you are no longer prompted to add the fingerprint,\\nbut instead fail immediately.\\n\\n## Step 4. Configure Environment Variables\\n\\nWe\u2019re almost done. All that\u2019s left is to point Git for Windows at PuTTY and Pageant, rather than its own built-in SSH\\nclient. Since VS Code uses Git for Windows, this will ensure that VS Code does what we want.\\n\\n1. Right-click on `My Computer` or `This PC` in Windows/File Explorer, and select `Properties`.\\n1. From there, click `Advanced system settings` in the sidebar to the left. On the `Advanced` tab, press\\n   the `Environment Variables...` button at the bottom.\\n1. Finally, click `New...` on the user variables pane (top), and add a new variable named `GIT_SSH` with\\n   value `C:\\\\Program Files (x86)\\\\PuTTY\\\\plink.exe`.\\n1. You may want to use `Browse File...` in this dialog box to make sure you get the path correct.\\n1. Once done, press `OK` to add the variable,`OK` again to close the Environment Variables dialog, then `OK` a third\\n   time to\\n   close System Properties.\\n1. Finally, close the System window."},{"id":"make-another-branch-as-master","metadata":{"permalink":"/app/blog/make-another-branch-as-master","source":"@site/blog/2022-03-05-make-another-branch-as-master.md","title":"Make another branch as master","description":"Since the task was to simply use another branch instead of master, you can simply remove master branch completely or","date":"2022-03-05T00:00:00.000Z","formattedDate":"March 5, 2022","tags":[{"label":"git","permalink":"/app/blog/tags/git"},{"label":"command","permalink":"/app/blog/tags/command"}],"readingTime":1.015,"hasTruncateMarker":false,"authors":[{"name":"koficodes","title":"Just a person","url":"https://koficodes.xyz","imageURL":"https://github.com/lejencodes.png","key":"koficodes"}],"frontMatter":{"slug":"make-another-branch-as-master","title":"Make another branch as master","authors":["koficodes"],"tags":["git","command"]},"unlisted":false,"prevItem":{"title":"Using ssh-agent with Visual Studio Code on Windows 10","permalink":"/app/blog/using-ssh-agent-with-visual-studio-code-on-windows-10"},"nextItem":{"title":"Hugo Commands","permalink":"/app/blog/hugo-commands"}},"content":"Since the task was to simply use another branch instead of `master`, you can simply remove `master` branch completely or\\nrename it to let\'s say - `legacy`, then take another branch and rename it to `master`. That\'s it. Here are actual\\ncommands\\nthat you might need to execute to achieve the goal locally and on GitHub:\\n\\n```shell\\ngit branch -m master legacy               # rename local master to legacy\\ngit checkout legacy\\ngit branch -m another_branch master       # another_branch will be our new master\\n```\\n\\nLocally we are done now. However you cannot simply remove `master` branch on GitHub. You need to take another branch as\\ndefault first. This can be done in repository `Settings > Default Branch`. Once you do this, you can proceed:\\n\\n```shell\\ngit push origin :master                   # remove master on GitHub\\ngit push origin master                    # push out our new master branch\\ngit push origin legacy                    # push our legacy branch too\\n```\\n\\nThen go back to `Settings > Default Branch` and switch default branch back to `master`. Additionally you can remove all\\nextra branches that you might have created during migration process.\\n\\nAlternatively, if you are looking to save all your actions in history, check a correct\\nanswer [here](https://stackoverflow.com/questions/2763006/change-the-current-branch-to-master-in-git)."},{"id":"hugo-commands","metadata":{"permalink":"/app/blog/hugo-commands","source":"@site/blog/2022-03-04-hugo-commands.md","title":"Hugo Commands","description":"","date":"2022-03-04T00:00:00.000Z","formattedDate":"March 4, 2022","tags":[{"label":"hugo","permalink":"/app/blog/tags/hugo"},{"label":"command","permalink":"/app/blog/tags/command"}],"readingTime":0.375,"hasTruncateMarker":false,"authors":[{"name":"koficodes","title":"Just a person","url":"https://koficodes.xyz","imageURL":"https://github.com/lejencodes.png","key":"koficodes"}],"frontMatter":{"slug":"hugo-commands","title":"Hugo Commands","authors":["koficodes"],"tags":["hugo","command"]},"unlisted":false,"prevItem":{"title":"Make another branch as master","permalink":"/app/blog/make-another-branch-as-master"},"nextItem":{"title":"Ghost Error 500 Hosting on Heroku","permalink":"/app/blog/ghost-error-500-hosting-on-heroku"}},"content":"```shell\\nhugo server --noHTTPCache --disableFastRender\\nhugo server --noHTTPCache --disableFastRender --ignoreCache\\n```\\n\\n# Create Post\\n\\n```shell\\nhugo new post/create-virtual-environment-in-linux/index.md\\n```\\n\\n# Install Hugo\\n\\n```shell\\ncurl -s https://api.github.com/repos/gohugoio/hugo/releases/latest \\\\\\n | grep  browser_download_url \\\\\\n | grep Linux-64bit.deb \\\\\\n | grep -v extended \\\\\\n | cut -d \'\\"\' -f 4 \\\\\\n | wget -i -\\n\\n curl -s https://api.github.com/repos/gohugoio/hugo/releases/latest \\\\\\n | grep  browser_download_url \\\\\\n | grep extended_0.81.0_Linux-64bit.deb \\\\\\n | cut -d \'\\"\' -f 4 \\\\\\n | wget -i -\\n```"},{"id":"ghost-error-500-hosting-on-heroku","metadata":{"permalink":"/app/blog/ghost-error-500-hosting-on-heroku","source":"@site/blog/2022-03-03-ghost-error-500-hosting-on-heroku/index.md","title":"Ghost Error 500 Hosting on Heroku","description":"Ghost Error 500 - The currently active theme is missing.","date":"2022-03-03T00:00:00.000Z","formattedDate":"March 3, 2022","tags":[{"label":"ghost","permalink":"/app/blog/tags/ghost"},{"label":"error-500","permalink":"/app/blog/tags/error-500"},{"label":"heroku","permalink":"/app/blog/tags/heroku"}],"readingTime":1.205,"hasTruncateMarker":false,"authors":[{"name":"koficodes","title":"Just a person","url":"https://koficodes.xyz","imageURL":"https://github.com/lejencodes.png","key":"koficodes"}],"frontMatter":{"slug":"ghost-error-500-hosting-on-heroku","title":"Ghost Error 500 Hosting on Heroku","authors":["koficodes"],"tags":["ghost","error-500","heroku"]},"unlisted":false,"prevItem":{"title":"Hugo Commands","permalink":"/app/blog/hugo-commands"},"nextItem":{"title":"Changing the Most Recent Commit","permalink":"/app/blog/changing-the-most-recent-commit"}},"content":"## Ghost Error 500 - The currently active theme is missing.\\n\\nBump into this error when I am trying to setup custom theme for Ghost Blog. I am using Heroku to host this site. Just\\ngot to know that Heroku site do not have storage to store the custom theme uploaded via Ghost admin panel.\\n\\nDid couple of search online, a lot suggested that you can clone heroku by git clone command\\n\\n    heroku git:clone -a myappname\\n\\nBut I get the error message about cloning an empty repository which I think it doesn\'t make any sense when the site is\\nlive at the moment\\n\\nContinued my search and finally came into something useful which is using heroku slug to download source code\\n\\n## Solution\\n\\n1. Before that, proceed to install Heroku CLI following guide at their official\\n   site [Heroku Dev Center](https://devcenter.heroku.com/articles/heroku-cli)\\n\\n1. Follow this site to get it [heroku-slugs](https://github.com/heroku/heroku-slugs) installed\\n\\n1. Login to Heroku account\\n\\n       heroku login\\n\\n1. Heroku slug command to download your source code\\n\\n       heroku slugs:download -a APP_NAME\\n\\n1. You will be getting the following folders:\\n\\n- app\\n- slug.tar.gz\\n\\n![Command Line](./command-line.png)\\n\\n1. Make a new repository in GitHub and upload app folder to your repository\\n\\n2. Proceed to your heroku app dashboard, under Deploy Tab, Deployment method select GitHub and search for your newly\\n   created repository. You will end up something like below.\\n\\n![Heroku](./heroku.png)\\n\\n1. Done!\\n2. You may also setup automatic deploys for every push to master branch"},{"id":"changing-the-most-recent-commit","metadata":{"permalink":"/app/blog/changing-the-most-recent-commit","source":"@site/blog/2022-03-02-changing-the-most-recent-commit.md","title":"Changing the Most Recent Commit","description":"The git commit --amend command allows you to change the most recent commit message.","date":"2022-03-02T00:00:00.000Z","formattedDate":"March 2, 2022","tags":[{"label":"git","permalink":"/app/blog/tags/git"},{"label":"commit","permalink":"/app/blog/tags/commit"}],"readingTime":2.915,"hasTruncateMarker":false,"authors":[{"name":"koficodes","title":"Just a person","url":"https://koficodes.xyz","imageURL":"https://github.com/lejencodes.png","key":"koficodes"}],"frontMatter":{"slug":"changing-the-most-recent-commit","title":"Changing the Most Recent Commit","authors":["koficodes"],"tags":["git","commit"]},"unlisted":false,"prevItem":{"title":"Ghost Error 500 Hosting on Heroku","permalink":"/app/blog/ghost-error-500-hosting-on-heroku"},"nextItem":{"title":"Python pip command","permalink":"/app/blog/python-pip-command"}},"content":"The `git commit --amend` command allows you to change the most recent commit message.\\n\\n### Not pushed commit\\n\\nTo change the message of the most recent commit that has not been pushed to the remote repository, commit it again using\\nthe `--amend` flag.\\n\\n1. Navigate to the repository directory in your terminal.\\n\\n2. Run the following command to amend (change) the message of the latest commit:\\n\\n```shell\\ngit commit --amend -m \\"New commit message.\\"\\n```\\n\\nWhat the command does is overwriting the most recent commit with the new one.\\n\\nThe `-m` option allows you to write the new message on the command line without opening an editor session.\\n\\nBefore changing the commit message, you can also add other changes you previously forgot:\\n\\n```shell\\ngit add .\\n```\\n\\n### Pushed commit\\n\\nThe amended (changed) commit is a new entity with a different SHA-1. The previous commit will no longer exist in the\\ncurrent branch.\\n\\nGenerally, you should avoid amending a commit that is already pushed as it may cause issues to people who based their\\nwork on this commit. It is a good idea to consult your fellow developers before changing a pushed commit.\\n\\nIf you changed the message of the most recently pushed commit, you would have to force push it.\\n\\n1. Navigate to the repository.\\n\\n2. Amend the message of the latest pushed commit:\\n\\n```shell\\ngit commit --amend -m \\"New commit message.\\"\\n```\\n\\n3. Force push to update the history of the remote repository:\\n\\n```shell\\ngit push --force branch-name\\n```\\n\\n## Changing an Older or Multiple Commits\\n\\nIf you need to change the message of an older or multiple commits, you can use an interactive `git rebase` to change one\\nor more older commits.\\n\\nThe `rebase` command rewrites the commit history, and it is strongly discouraged to rebase commits that are already\\npushed to the remote Git repository.\\n\\n1. Navigate to the repository containing the commit message you want to change.\\n\\n2. Type `git rebase -i HEAD~N`, where `N` is the number of commits to perform a rebase on. For example, if you want to\\n   change the 4th and the 5th latest commits, you would type:\\n\\n```shell\\ngit rebase -i HEAD~5\\n```\\n\\nThe command will display the latest `X` commits in your default text editor:\\n\\n```shell\\npick 43f8707f9 fix: update dependency json5 to ^2.1.1\\npick cea1fb88a fix: update dependency verdaccio to ^4.3.3\\npick aa540c364 fix: update dependency webpack-dev-server to ^3.8.2\\npick c5e078656 chore: update dependency flow-bin to ^0.109.0\\npick 11ce0ab34 fix: Fix spelling.\\n\\n# Rebase 7e59e8ead..11ce0ab34 onto 7e59e8ead (5 commands)\\n```\\n\\n3. Move to the lines of the commit message you want to change and replace `pick` with `reword`:\\n\\n```shell\\nreword 43f8707f9 fix: update dependency json5 to ^2.1.1\\nreword cea1fb88a fix: update dependency verdaccio to ^4.3.3\\npick aa540c364 fix: update dependency webpack-dev-server to ^3.8.2\\npick c5e078656 chore: update dependency flow-bin to ^0.109.0\\npick 11ce0ab34 fix: Fix spelling.\\n\\n# Rebase 7e59e8ead..11ce0ab34 onto 7e59e8ead (5 commands)\\n```\\n\\n4. Save the changes and close the editor.\\n\\n5. For each chosen commit, a new text editor window will open. Change the commit message, save the file, and close the\\n   editor.\\n\\n```shell\\nfix: update dependency json5 to ^2.1.1\\n```\\n\\n6. Force push the changes to the remote repository:\\n\\n```shell\\ngit push --force branch-name\\n```\\n\\n## Conclusion\\n\\nTo change the most recent commit message, use the `git commit --amend` command. To change older or multiple commit\\nmessages, use `git rebase -i HEAD~N`.\\n\\nDon\u2019t amend pushed commits as it may potentially cause a lot of problems to your colleagues."},{"id":"python-pip-command","metadata":{"permalink":"/app/blog/python-pip-command","source":"@site/blog/2022-03-01-python-pip-command.md","title":"Python pip command","description":"Find package","date":"2022-03-01T00:00:00.000Z","formattedDate":"March 1, 2022","tags":[{"label":"python","permalink":"/app/blog/tags/python"},{"label":"pip","permalink":"/app/blog/tags/pip"}],"readingTime":1.88,"hasTruncateMarker":false,"authors":[{"name":"koficodes","title":"Just a person","url":"https://koficodes.xyz","imageURL":"https://github.com/lejencodes.png","key":"koficodes"}],"frontMatter":{"slug":"python-pip-command","title":"Python pip command","authors":["koficodes"],"tags":["python","pip"]},"unlisted":false,"prevItem":{"title":"Changing the Most Recent Commit","permalink":"/app/blog/changing-the-most-recent-commit"},"nextItem":{"title":"Starting With Ghost Blogging","permalink":"/app/blog/starting-with-ghost-blogging"}},"content":"## Find package\\n\\n    py -m pip freeze | findstr py\\n\\n## Upgrade Pip\\n\\n    python -m pip install --upgrade pip --trusted-host pypi.org --trusted-host files.pythonhosted.org\\n    py -m pip install --upgrade pip --trusted-host pypi.org --trusted-host files.pythonhosted.org\\n    C:\\\\Users\\\\xxx\\\\AppData\\\\Local\\\\Programs\\\\Python\\\\Python38\\\\python.exe -m pip install --upgrade pip --trusted-host pypi.org --trusted-host files.pythonhosted.org\\n\\n## Install Pip\\n\\n    py get-pip.py --trusted-host pypi.org --trusted-host files.pythonhosted.org\\n\\n## Pip Install command\\n\\n```shell\\n    pip install --trusted-host pypi.org --trusted-host files.pythonhosted.org <package> --user\\n    py -m pip install --trusted-host pypi.org --trusted-host files.pythonhosted.org <package> --user\\n```\\n\\n## some notes on new setup\\n\\n```shell\\n    python -m pip install --trusted-host pypi.org --trusted-host files.pythonhosted.org <package> --user\\n```\\n\\n## install from whl\\n\\n```shell\\n    pip install some-package.whl\\n```\\n\\n## Add to path\\n\\n```shell\\n    C:\\\\Users\\\\xxx\\\\AppData\\\\Roaming\\\\Python\\\\Python37\\\\Scripts\\n```\\n\\n## Use this to install from local drive\\n\\n```shell\\n    pip install ./downloads/PythonSetup3.8/flake8-3.8.3.tar.gz  --trusted-host pypi.org --trusted-host files.pythonhosted.org\\n    py -m pip install ./downloads/PythonSetup3.8/dateformat-0.9.7.tar.gz --trusted-host pypi.org --trusted-host files.pythonhosted.org --user\\n```\\n\\n## Install requirement\\n\\n```shell\\n    pip install -r requirements.txt --trusted-host pypi.org --trusted-host files.pythonhosted.org\\n    python -m pip install -r requirements.txt --trusted-host pypi.org --trusted-host files.pythonhosted.org\\n```\\n\\n## When upgrading, reinstall all packages even if they are already up-to-date.\\n\\n```shell\\n    pip install --upgrade --force-reinstall <package> --trusted-host pypi.org --trusted-host files.pythonhosted.org\\n    pip install --upgrade --force-reinstall --trusted-host pypi.org --trusted-host files.pythonhosted.org <package>\\n\\n    pip install -I <package>\\n    pip install --ignore-installed <package>\\n```\\n\\n## Once in a while, a Python package gets corrupted on your machine and you need to force pip to reinstall it. As of pip 10.0, you can run the following:\\n\\n## This will force pip to re-install `corrupted package` and all its dependencies.\\n\\n```shell\\n    pip install --force-reinstall <corrupted package>\\n```\\n\\n## If you want to re-download the packages instead of using the files from your pip cache, add the --no-cache-dir flag:\\n\\n```shell\\n    pip install --force-reinstall --no-cache-dir <corrupted package>\\n```\\n\\n## If you want to upgrade the package, you can run this instead:\\n\\n```shell\\n    pip install --upgrade <corrupted package>\\n```\\n\\n## The --upgrade flag will not mess with the dependencies of `corrupted package` unless you add the --force-reinstall flag.\\n\\n## If, for some reason, you want to re-install `corrupted package` and all its dependencies without first removing the current versions, you can run:\\n\\n```shell\\n    pip install --ignore-installed <corrupted package>\\n```\\n\\n## By the way, if you\u2019re using a pip version that is less than 10.0, it\u2019s time to update pip:\\n\\n```shell\\n    pip install --upgrade pip\\n```"},{"id":"starting-with-ghost-blogging","metadata":{"permalink":"/app/blog/starting-with-ghost-blogging","source":"@site/blog/2022-01-02-starting-with-ghost-blogging.md","title":"Starting With Ghost Blogging","description":"Here\'s my thoughts","date":"2022-01-02T00:00:00.000Z","formattedDate":"January 2, 2022","tags":[{"label":"ghost","permalink":"/app/blog/tags/ghost"},{"label":"blog","permalink":"/app/blog/tags/blog"},{"label":"comparison","permalink":"/app/blog/tags/comparison"}],"readingTime":1.59,"hasTruncateMarker":false,"authors":[{"name":"koficodes","title":"Just a person","url":"https://koficodes.xyz","imageURL":"https://github.com/lejencodes.png","key":"koficodes"}],"frontMatter":{"slug":"starting-with-ghost-blogging","title":"Starting With Ghost Blogging","authors":["koficodes"],"tags":["ghost","blog","comparison"]},"unlisted":false,"prevItem":{"title":"Python pip command","permalink":"/app/blog/python-pip-command"}},"content":"Here\'s my thoughts\\n\\nAlways wanted to create personal site. Started with Github pages, uses automated workflow and get stuff compiled into a\\nstatic site (Jekyll). Didn\'t like it much about having to write stuff in editor and then later you have to perform\\ncommits and pushes. So I moved on and wanted to find something with a user interface that I could interact with.\\nSomething which is free without need to spend extra $$$.\\n\\n## Hugo + Netlify + Github\\n\\nThe next try on Hugo.\\n\\nHugo is a static website engine written in Golang. Best thing about this is on the theming system, plenty of choices and\\neverything is free. Did some search on Google, landed on some one click deployment. Messing with it for couple of days\\non the HTML, CSS and JS. Personal didn\'t like it due to lack of content management so went for another search on\\nalternatives.\\n\\n## Medium, Wordpress\\n\\nRecently seeing quite a bit of content creator from Medium and Wordpress, could be possibly everyone is so free during\\nthe world pandemic, including myself. These platform don\'t really work well without spending some $$$. Content creator\\nusually have their articles behind some pay-wall, good for people who wanted to monetize their content. I wish I could\\nwrite as like the others, but too bad I don\'t.\\n\\n## Ghost\\n\\nFinally settled down with hosting Ghost with Heroku with a domain name setup with Cloudflare.\\n\\nStarting to like it due to the ease of use and user-friendly interface. Best thing about it is open source, you can\\ncustomise your theme, and you have full control on how your site should look like. The default theme of Ghost (Casper),\\nlooks good enough to keep your site look clean and steady.\\n\\n## I am back to Github pages\\n\\nAfter the recent announcement on heroku no longer offer free dyno hours. I am moving back to github pages."}]}')}}]);