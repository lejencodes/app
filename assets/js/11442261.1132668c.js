"use strict";(self.webpackChunkapp_src=self.webpackChunkapp_src||[]).push([[3660],{3905:(e,t,r)=>{r.d(t,{Zo:()=>a,kt:()=>m});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=n.createContext({}),s=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):c(c({},t),e)),r},a=function(e){var t=s(e.components);return n.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,a=p(e,["components","mdxType","originalType","parentName"]),u=s(r),m=o,g=u["".concat(l,".").concat(m)]||u[m]||d[m]||i;return r?n.createElement(g,c(c({ref:t},a),{},{components:r})):n.createElement(g,c({ref:t},a))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,c=new Array(i);c[0]=u;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p.mdxType="string"==typeof e?e:o,c[1]=p;for(var s=2;s<i;s++)c[s]=r[s];return n.createElement.apply(null,c)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},4607:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>c,default:()=>d,frontMatter:()=>i,metadata:()=>p,toc:()=>s});var n=r(7462),o=(r(7294),r(3905));const i={id:"open-closed-principle",title:"Open Closed Principle",tags:["solid","ocp"]},c=void 0,p={unversionedId:"programming/object-oriented-design/open-closed-principle",id:"programming/object-oriented-design/open-closed-principle",title:"Open Closed Principle",description:"Open-closed Principle (OCP) states:",source:"@site/docs/programming/object-oriented-design/open-closed-principle.md",sourceDirName:"programming/object-oriented-design",slug:"/programming/object-oriented-design/open-closed-principle",permalink:"/docs/programming/object-oriented-design/open-closed-principle",draft:!1,tags:[{label:"solid",permalink:"/docs/tags/solid"},{label:"ocp",permalink:"/docs/tags/ocp"}],version:"current",frontMatter:{id:"open-closed-principle",title:"Open Closed Principle",tags:["solid","ocp"]},sidebar:"tutorialSidebar",previous:{title:"Liskov Substitution Principle",permalink:"/docs/programming/object-oriented-design/liskov-substitution-principle"},next:{title:"Single Responsibility Principle",permalink:"/docs/programming/object-oriented-design/single-responsibility-principle"}},l={},s=[],a={toc:s};function d(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},a,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Open-closed Principle (OCP) states:"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Objects or entities should be open for extension but closed for modification.")))}d.isMDXComponent=!0}}]);