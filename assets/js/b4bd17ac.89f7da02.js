"use strict";(self.webpackChunkapp_src=self.webpackChunkapp_src||[]).push([[3796],{75595:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>s,default:()=>l,frontMatter:()=>o,metadata:()=>c,toc:()=>p});var i=t(85893),r=t(11151);const o={id:"interface-segregation-principle",title:"Interface Segregation Principle",tags:["solid","isp"]},s=void 0,c={id:"programming/object-oriented-design/interface-segregation-principle",title:"Interface Segregation Principle",description:"Interface segregation principle states:",source:"@site/docs/programming/object-oriented-design/interface-segregation-principle.md",sourceDirName:"programming/object-oriented-design",slug:"/programming/object-oriented-design/interface-segregation-principle",permalink:"/app/docs/programming/object-oriented-design/interface-segregation-principle",draft:!1,unlisted:!1,tags:[{label:"solid",permalink:"/app/docs/tags/solid"},{label:"isp",permalink:"/app/docs/tags/isp"}],version:"current",frontMatter:{id:"interface-segregation-principle",title:"Interface Segregation Principle",tags:["solid","isp"]},sidebar:"docsSidebar",previous:{title:"Dependency Inversion Principle",permalink:"/app/docs/programming/object-oriented-design/dependency-inversion-principle"},next:{title:"Liskov Substitution Principle",permalink:"/app/docs/programming/object-oriented-design/liskov-substitution-principle"}},a={},p=[];function d(e){const n={blockquote:"blockquote",p:"p",...(0,r.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:"Interface segregation principle states:"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:"A client should never be forced to implement an interface that it doesn\u2019t use, or clients shouldn\u2019t be forced to\ndepend on methods they do not use."}),"\n"]})]})}function l(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},11151:(e,n,t)=>{t.d(n,{Z:()=>c,a:()=>s});var i=t(67294);const r={},o=i.createContext(r);function s(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);