"use strict";(self.webpackChunkapp_src=self.webpackChunkapp_src||[]).push([[3078],{3905:(e,t,r)=>{r.d(t,{Zo:()=>s,kt:()=>g});var a=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var c=a.createContext({}),p=function(e){var t=a.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},s=function(e){var t=p(e.components);return a.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),m=p(r),g=n,d=m["".concat(c,".").concat(g)]||m[g]||u[g]||o;return r?a.createElement(d,i(i({ref:t},s),{},{components:r})):a.createElement(d,i({ref:t},s))}));function g(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,i=new Array(o);i[0]=m;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:n,i[1]=l;for(var p=2;p<o;p++)i[p]=r[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},83279:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var a=r(87462),n=(r(67294),r(3905));const o={id:"git-worktree",title:"Git Worktree",tags:["git","worktree"]},i="Git Worktree",l={unversionedId:"programming/tools/git-worktree",id:"programming/tools/git-worktree",title:"Git Worktree",description:"Git Worktree is a feature that allows you to maintain multiple working trees associated with a single Git repository.",source:"@site/docs/programming/tools/git-worktree.md",sourceDirName:"programming/tools",slug:"/programming/tools/git-worktree",permalink:"/app/docs/programming/tools/git-worktree",draft:!1,tags:[{label:"git",permalink:"/app/docs/tags/git"},{label:"worktree",permalink:"/app/docs/tags/worktree"}],version:"current",frontMatter:{id:"git-worktree",title:"Git Worktree",tags:["git","worktree"]},sidebar:"tutorialSidebar",previous:{title:"Git Multiple Repositories",permalink:"/app/docs/programming/tools/git-multiple-repo"},next:{title:"Rider Multi Cursor For Mac",permalink:"/app/docs/programming/tools/rider-multi-cursor-for-mac"}},c={},p=[{value:"Creating a New Worktree",id:"creating-a-new-worktree",level:2},{value:"Example: Create a <code>feature-x</code> Directory and Branch",id:"example-create-a-feature-x-directory-and-branch",level:3},{value:"Naming the Branch (Optional)",id:"naming-the-branch-optional",level:3},{value:"Tracking a Remote Branch (Optional)",id:"tracking-a-remote-branch-optional",level:3}],s={toc:p};function u(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,a.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"git-worktree"},"Git Worktree"),(0,n.kt)("p",null,"Git Worktree is a feature that allows you to maintain multiple working trees associated with a single Git repository.\nEach working tree is an isolated environment with its own working directory and allows you to work on different branches\nor even different commits simultaneously."),(0,n.kt)("h2",{id:"creating-a-new-worktree"},"Creating a New Worktree"),(0,n.kt)("p",null,"To create a new worktree, use the following command:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"git worktree add <PATH>\n")),(0,n.kt)("h3",{id:"example-create-a-feature-x-directory-and-branch"},"Example: Create a ",(0,n.kt)("inlineCode",{parentName:"h3"},"feature-x")," Directory and Branch"),(0,n.kt)("p",null,"To create a new worktree for a branch and have a directory with the same name, you can run:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"git worktree add ../feature-x\n")),(0,n.kt)("h3",{id:"naming-the-branch-optional"},"Naming the Branch (Optional)"),(0,n.kt)("p",null,"You can give your branch a unique name using the ",(0,n.kt)("inlineCode",{parentName:"p"},"-b")," flag with the ",(0,n.kt)("inlineCode",{parentName:"p"},"add")," command:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"git worktree add -b feature-xyz ../feature-xyz\n")),(0,n.kt)("h3",{id:"tracking-a-remote-branch-optional"},"Tracking a Remote Branch (Optional)"),(0,n.kt)("p",null,"If you want to switch to a new branch that tracks a branch on a remote repository, you can use the following syntax:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"git worktree add -b <branch-name> <PATH> <remote>/<branch-name>\n")),(0,n.kt)("p",null,"Example:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"git worktree add -b feature-zzz ../feature-x origin/feature-zzz\n")),(0,n.kt)("p",null,"For existing branches, you can also track a remote branch:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"git worktree add --track -b <branch> <path> <remote>/<branch>\n")),(0,n.kt)("p",null,"Example:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"git worktree add --track -b branchname ../folder origin/branchname\n")))}u.isMDXComponent=!0}}]);