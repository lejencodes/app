"use strict";(self.webpackChunkapp_src=self.webpackChunkapp_src||[]).push([[6936],{43074:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>d,frontMatter:()=>l,metadata:()=>i,toc:()=>o});var s=r(85893),t=r(11151);const l={id:"install-app-altserver-daemon",title:"Install App Altserver Daemon",tags:["altserver"]},a=void 0,i={id:"altserver/install-app-altserver-daemon",title:"Install App Altserver Daemon",description:"- Install IPA: ./AltServer -u [UDID] -a [AppleID account] -p [AppleID password] [ipaPath.ipa]",source:"@site/docs/altserver/install-app.md",sourceDirName:"altserver",slug:"/altserver/install-app-altserver-daemon",permalink:"/docs/altserver/install-app-altserver-daemon",draft:!1,unlisted:!1,tags:[{label:"altserver",permalink:"/docs/tags/altserver"}],version:"current",frontMatter:{id:"install-app-altserver-daemon",title:"Install App Altserver Daemon",tags:["altserver"]},sidebar:"docsSidebar",previous:{title:"Get Device Unique Id",permalink:"/docs/altserver/get-device-udid"},next:{title:"App",permalink:"/docs/category/app"}},c={},o=[];function p(e){const n={a:"a",code:"code",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,t.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Install IPA: ",(0,s.jsx)(n.code,{children:"./AltServer -u [UDID] -a [AppleID account] -p [AppleID password] [ipaPath.ipa]"})]}),"\n",(0,s.jsxs)(n.li,{children:["Running as AltServer Daemon: ",(0,s.jsx)(n.code,{children:"./AltServer"})]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Here's my guide to get it running again:"}),"\n",(0,s.jsxs)(n.p,{children:["Your architecture may differ, so I will refer to the executable as ",(0,s.jsx)(n.code,{children:"anisette-server"}),"."]}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Download an alternative ",(0,s.jsx)(n.code,{children:"anisette-server"})," from ",(0,s.jsx)(n.a,{href:"https://github.com/Dadoum/Provision/releases/tag/2.1.0",children:"GitHub"}),"."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Extract it, mark it as executable:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"chmod +111 anisette-server\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Run it like this:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"./anisette-server -n 127.0.0.1 -p 6969\n"})}),"\n",(0,s.jsx)(n.p,{children:"These are my hostname (argument -n) and port (-p) of choice; you may pick something else."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Open a new window/screen/etc."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Export the environment variable for AltServer so it connects to our server:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"export ALTSERVER_ANISETTE_SERVER=http://127.0.0.1:6969\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Run AltServer; it should work!"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"./AltServer\n"})}),"\n"]}),"\n"]})]})}function d(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(p,{...e})}):p(e)}},11151:(e,n,r)=>{r.d(n,{Z:()=>i,a:()=>a});var s=r(67294);const t={},l=s.createContext(t);function a(e){const n=s.useContext(l);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),s.createElement(l.Provider,{value:n},e.children)}}}]);